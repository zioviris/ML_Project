{"version":3,"file":"static/js/461.6dbc186d.chunk.js","mappings":"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","sources":["common/components/PageContainer.tsx","common/components/RequestStateWrapper.tsx","common/components/Spinner.tsx","common/components/error-boundaries/SectionErrorBoundary.tsx","common/utils/ErrorUtils.tsx","common/utils/withErrorBoundary.tsx","common/utils/withRouterNext.tsx","experiment-tracking/components/MetricView.tsx","experiment-tracking/components/MetricPage.tsx","shared/building_blocks/PageHeader.tsx","shared/building_blocks/PreviewBadge.tsx","../node_modules/react-error-boundary/dist/src/ErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/ErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/assertErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/useErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/withErrorBoundary.ts"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport './RequestStateWrapper.css';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype OwnRequestStateWrapperProps = {\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n  suppressErrorThrow?: boolean;\n};\n\ntype RequestStateWrapperState = any;\n\ntype RequestStateWrapperProps = OwnRequestStateWrapperProps & typeof RequestStateWrapper.defaultProps;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView, suppressErrorThrow } = this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError && !suppressErrorThrow) {\n        triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\n// @ts-expect-error TS(7006): Parameter 'state' implicitly has an 'any' type.\nconst mapStateToProps = (state, ownProps) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport spinner from '../static/mlflow-spinner.png';\nimport { keyframes } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport class Spinner extends Component<Props> {\n  render() {\n    return (\n      // @ts-expect-error TS(2322): Type '(theme: Theme) => { width: number; marginTop... Remove this comment to see the full error message\n      <div css={(theme) => styles.spinner(theme, this.props.showImmediately)}>\n        <img alt=\"Page loading...\" src={spinner} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  // @ts-expect-error TS(7006): Parameter 'theme' implicitly has an 'any' type.\n  spinner: (theme, immediate) => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? 0 : '0.5s',\n    },\n  }),\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i data-testid=\"icon-fail\" className=\"fa fa-exclamation-triangle icon-fail\" css={classNames.wrapper} />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","import React from 'react';\n\nclass ErrorUtils {\n  static mlflowServices = {\n    MODEL_REGISTRY: 'Model Registry',\n    EXPERIMENTS: 'Experiments',\n    MODEL_SERVING: 'Model Serving',\n    RUN_TRACKING: 'Run Tracking',\n  };\n}\n\nexport default ErrorUtils;\n","import React from 'react';\nimport { ErrorBoundary, ErrorBoundaryPropsWithComponent, FallbackProps } from 'react-error-boundary';\nimport ErrorUtils from './ErrorUtils';\nimport { DangerIcon, Empty } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\n\nexport type ErrorBoundaryProps = {\n  children: React.Component;\n  customFallbackComponent?: ErrorBoundaryPropsWithComponent['FallbackComponent'];\n};\n\nfunction ErrorFallback() {\n  return (\n    <Empty\n      data-testid=\"fallback\"\n      title={<FormattedMessage defaultMessage=\"Error\" description=\"Title of editor error fallback component\" />}\n      description={\n        <FormattedMessage\n          defaultMessage=\"An error occurred while rendering this component.\"\n          description=\"Description of error fallback component\"\n        />\n      }\n      image={<DangerIcon />}\n    />\n  );\n}\n\nfunction CustomErrorBoundary({ children, customFallbackComponent }: React.PropsWithChildren<ErrorBoundaryProps>) {\n  function logErrorToConsole(error: Error, info: { componentStack: string }) {\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error('Caught Unexpected Error: ', error, info.componentStack);\n  }\n\n  if (customFallbackComponent) {\n    return (\n      <ErrorBoundary onError={logErrorToConsole} FallbackComponent={customFallbackComponent}>\n        {children}\n      </ErrorBoundary>\n    );\n  }\n\n  return (\n    <ErrorBoundary onError={logErrorToConsole} fallback={<ErrorFallback />}>\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function withErrorBoundary<P>(\n  service: string,\n  Component: React.ComponentType<P>,\n  errorMessage?: React.ReactNode,\n  customFallbackComponent?: React.ComponentType<FallbackProps>,\n): React.ComponentType<P> {\n  return function CustomErrorBoundaryWrapper(props: P) {\n    return (\n      <CustomErrorBoundary customFallbackComponent={customFallbackComponent}>\n        {/* @ts-expect-error Generics don't play well with WithConditionalCSSProp type coming @emotion/react jsx typing to validate css= prop values typing. More details here: emotion-js/emotion#2169 */}\n        <Component {...props} />\n      </CustomErrorBoundary>\n    );\n  };\n}\n","import React from 'react';\n\nimport {\n  type Location,\n  type Params as RouterDOMParams,\n  type NavigateOptions,\n  type To,\n  useLocation,\n  useNavigate,\n  useParams,\n} from './RoutingUtils';\n\nexport interface WithRouterNextProps<Params extends RouterDOMParams = RouterDOMParams> {\n  navigate: ReturnType<typeof useNavigate>;\n  location: Location;\n  params: Params;\n}\n\n/**\n * This HoC serves as a retrofit for class components enabling them to use\n * react-router v6's location, navigate and params being injected via props.\n */\nexport const withRouterNext =\n  <\n    T,\n    Props extends JSX.IntrinsicAttributes &\n      JSX.LibraryManagedAttributes<React.ComponentType<T>, React.PropsWithChildren<T>>,\n    Params extends RouterDOMParams = RouterDOMParams,\n  >(\n    Component: React.ComponentType<T>,\n  ) =>\n  (\n    props: Omit<\n      Props,\n      | 'location'\n      | 'navigate'\n      | 'params'\n      | 'navigationType'\n      /* prettier-ignore*/\n    >,\n  ) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams<Params>();\n\n    return (\n      <Component\n        /* prettier-ignore */\n        params={params as Params}\n        location={location}\n        navigate={navigate}\n        {...(props as Props)}\n      />\n    );\n  };\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport './MetricView.css';\nimport { getExperiment, getRunInfo } from '../reducers/Reducers';\nimport MetricsPlotPanel from './MetricsPlotPanel';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport type { Location } from '../../common/utils/RoutingUtils';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport Routes from '../routes';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\n\ntype MetricViewImplProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runUuids: string[];\n  runNames: string[];\n  metricKey: string;\n  location: Location;\n};\n\nexport class MetricViewImpl extends Component<MetricViewImplProps> {\n  getCompareRunsPageText(numRuns: any, numExperiments: any) {\n    return numExperiments > 1 ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{ numRuns, numExperiments }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{ numRuns }}\n      />\n    );\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  getRunPageLink() {\n    const { experimentIds, runUuids, runNames } = this.props;\n\n    if (!runUuids || runUuids.length === 0) {\n      return null;\n    }\n\n    if (runUuids.length === 1) {\n      return <Link to={Routes.getRunPageRoute(experimentIds[0], runUuids[0])}>{runNames[0]}</Link>;\n    }\n\n    const text = this.getCompareRunsPageText(runUuids.length, experimentIds.length);\n    return <Link to={Routes.getCompareRunPageRoute(runUuids, experimentIds)}>{text}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to the compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getExperimentPageLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    if (hasComparedExperimentsBefore && comparedExperimentIds) {\n      const text = this.getCompareExperimentsPageLinkText(comparedExperimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(comparedExperimentIds)}>{text}</Link>;\n    }\n\n    if (this.hasMultipleExperiments()) {\n      const text = this.getCompareExperimentsPageLinkText(experimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>{text}</Link>;\n    }\n\n    return <Link to={Routes.getExperimentPageRoute(experimentIds[0])}>{experiments[0].name}</Link>;\n  }\n\n  render() {\n    const { experimentIds, runUuids, metricKey, location } = this.props;\n    const { selectedMetricKeys } = Utils.getMetricPlotStateFromUrl(location.search);\n    const title =\n      selectedMetricKeys.length > 1 ? (\n        <FormattedMessage defaultMessage=\"Metrics\" description=\"Title for metrics page\" />\n      ) : (\n        selectedMetricKeys[0]\n      );\n    const breadcrumbs = [this.getExperimentPageLink(), this.getRunPageLink()];\n    return (\n      <div>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} hideSpacer />\n        <MetricsPlotPanel {...{ experimentIds, runUuids, metricKey }} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const { experimentIds, runUuids } = ownProps;\n  const experiments =\n    experimentIds !== null ? experimentIds.map((experimentId: any) => getExperiment(experimentId, state)) : null;\n  const runNames = runUuids.map((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    return Utils.getRunDisplayName(runInfo, runUuid);\n  });\n  return { experiments, runNames, comparedExperimentIds, hasComparedExperimentsBefore };\n};\n\nexport const MetricView = withRouterNext(connect(mapStateToProps)(MetricViewImpl));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { getExperimentApi, getRunApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport NotFoundPage from './NotFoundPage';\nimport { MetricView } from './MetricView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport Utils from '../../common/utils/Utils';\nimport { injectIntl, type IntlShape } from 'react-intl';\n\ntype MetricPageImplProps = {\n  runUuids: string[];\n  metricKey: string;\n  experimentIds?: string[];\n  dispatch: (...args: any[]) => any;\n  loadError?: unknown;\n  intl: IntlShape;\n};\n\nexport class MetricPageImpl extends Component<MetricPageImplProps> {\n  requestIds: any;\n\n  constructor(props: MetricPageImplProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  fetchExperiments() {\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props.dispatch(getExperimentApi(experimentId, experimentRequestId));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.loadError instanceof Error) {\n      const message = this.props.intl.formatMessage({\n        defaultMessage: 'Error during metric page load: invalid URL',\n        description: 'Error message when loading metric page fails',\n      });\n      Utils.displayGlobalErrorNotification(message);\n    }\n    if (this.props.experimentIds !== null) {\n      const getExperimentsRequestIds = this.fetchExperiments();\n      this.requestIds.push(...getExperimentsRequestIds);\n    }\n    this.props.runUuids.forEach((runUuid) => {\n      // Fetch tags for each run. TODO: it'd be nice if we could just fetch the tags directly\n      const getRunRequestId = getUUID();\n      this.requestIds.push(getRunRequestId);\n      this.props.dispatch(getRunApi(runUuid, getRunRequestId));\n    });\n  }\n\n  renderPageContent() {\n    const { runUuids } = this.props;\n    return runUuids.length >= 1 ? (\n      <MetricView\n        runUuids={this.props.runUuids}\n        metricKey={this.props.metricKey}\n        experimentIds={this.props.experimentIds}\n      />\n    ) : (\n      <NotFoundPage />\n    );\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.requestIds}\n          // eslint-disable-next-line no-trailing-spaces\n        >\n          {this.renderPageContent()}\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps<{ metricKey: string }>) => {\n  const { location } = ownProps;\n  const searchValues = qs.parse(location.search);\n  try {\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const metricKey = JSON.parse(searchValues['metric']);\n    let experimentIds = null;\n    if (searchValues.hasOwnProperty('experiments')) {\n      // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n      experimentIds = JSON.parse(searchValues['experiments']);\n    }\n\n    return {\n      runUuids,\n      metricKey,\n      experimentIds,\n    };\n  } catch (e) {\n    return {\n      runUuids: [],\n      metricKey: '',\n      experimentIds: [],\n      loadError: e,\n    };\n  }\n};\n\nconst MetricPageWithRouter = withRouterNext(connect(mapStateToProps)(injectIntl(MetricPageImpl)));\n\nexport const MetricPage = withErrorBoundary(ErrorUtils.mlflowServices.EXPERIMENTS, MetricPageWithRouter);\nexport default MetricPage;\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-test-id={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-test-id=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_shared_building_blocks_previewbadge.tsx_14\"\n      className={className}\n      css={{ marginLeft: theme.spacing.xs }}\n      color=\"turquoise\"\n    >\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n","import { createContext } from \"react\";\n\nexport type ErrorBoundaryContextType = {\n  didCatch: boolean;\n  error: any;\n  resetErrorBoundary: (...args: any[]) => void;\n};\n\nexport const ErrorBoundaryContext =\n  createContext<ErrorBoundaryContextType | null>(null);\n","import {\n  Component,\n  createElement,\n  ErrorInfo,\n  isValidElement,\n  PropsWithChildren,\n  PropsWithRef,\n  ReactElement,\n} from \"react\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\nimport { ErrorBoundaryProps, FallbackProps } from \"./types\";\n\ntype ErrorBoundaryState = { didCatch: boolean; error: any };\n\nconst initialState: ErrorBoundaryState = {\n  didCatch: false,\n  error: null,\n};\n\nexport class ErrorBoundary extends Component<\n  PropsWithRef<PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  state = initialState;\n\n  static getDerivedStateFromError(error: Error) {\n    return { didCatch: true, error };\n  }\n\n  resetErrorBoundary = (...args: any[]) => {\n    const { error } = this.state;\n\n    if (error !== null) {\n      this.props.onReset?.({\n        args,\n        reason: \"imperative-api\",\n      });\n\n      this.setState(initialState);\n    }\n  };\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.props.onError?.(error, info);\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState\n  ) {\n    const { didCatch } = this.state;\n    const { resetKeys } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (\n      didCatch &&\n      prevState.error !== null &&\n      hasArrayChanged(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onReset?.({\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\",\n      });\n\n      this.setState(initialState);\n    }\n  }\n\n  render() {\n    const { children, fallbackRender, FallbackComponent, fallback } =\n      this.props;\n    const { didCatch, error } = this.state;\n\n    let childToRender = children;\n\n    if (didCatch) {\n      const props: FallbackProps = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      };\n\n      if (isValidElement(fallback)) {\n        childToRender = fallback;\n      } else if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else {\n        throw new Error(\n          \"react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop\"\n        );\n      }\n    }\n\n    return createElement(\n      ErrorBoundaryContext.Provider,\n      {\n        value: {\n          didCatch,\n          error,\n          resetErrorBoundary: this.resetErrorBoundary,\n        },\n      },\n      childToRender\n    ) as ReactElement;\n  }\n}\n\nfunction hasArrayChanged(a: any[] = [], b: any[] = []) {\n  return (\n    a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n  );\n}\n","import { ErrorBoundaryContextType } from \"./ErrorBoundaryContext\";\n\nexport function assertErrorBoundaryContext(\n  value: any\n): value is ErrorBoundaryContextType {\n  if (\n    value == null ||\n    typeof value.didCatch !== \"boolean\" ||\n    typeof value.resetErrorBoundary !== \"function\"\n  ) {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n\n  return true;\n}\n","import { useContext, useMemo, useState } from \"react\";\nimport { assertErrorBoundaryContext } from \"./assertErrorBoundaryContext\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\n\nexport type UseErrorBoundaryApi<Error> = {\n  resetBoundary: () => void;\n  showBoundary: (error: Error) => void;\n};\n\nexport function useErrorBoundary<Error = any>(): UseErrorBoundaryApi<Error> {\n  const context = useContext(ErrorBoundaryContext);\n\n  assertErrorBoundaryContext(context);\n\n  const [state, setState] = useState<{\n    error: Error | null;\n    hasError: boolean;\n  }>({\n    error: null,\n    hasError: false,\n  });\n\n  const memoized = useMemo(\n    () => ({\n      resetBoundary: () => {\n        context?.resetErrorBoundary();\n        setState({ error: null, hasError: false });\n      },\n      showBoundary: (error: Error) =>\n        setState({\n          error,\n          hasError: true,\n        }),\n    }),\n    [context?.resetErrorBoundary]\n  );\n\n  if (state.hasError) {\n    throw state.error;\n  }\n\n  return memoized;\n}\n","import { ComponentType, createElement } from \"react\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { ErrorBoundaryProps } from \"./types\";\n\nexport function withErrorBoundary<Props extends Object>(\n  Component: ComponentType<Props>,\n  errorBoundaryProps: ErrorBoundaryProps\n): ComponentType<Props> {\n  const Wrapped: ComponentType<Props> = (props: Props) => {\n    return createElement(\n      ErrorBoundary,\n      errorBoundaryProps,\n      createElement(Component, props)\n    );\n  };\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || \"Unknown\";\n  Wrapped.displayName = `withErrorBoundary(${name})`;\n\n  return Wrapped;\n}\n"],"names":["PageContainer","props","usesFullHeight","restProps","_jsxs","PageWrapper","css","styles","useFullHeightLayout","wrapper","children","_jsx","Spacer","fixedSpacer","container","defaultProps","height","display","flexDirection","flexGrow","flex","flexShrink","width","paddingBottom","RequestStateWrapper","Component","constructor","arguments","state","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","filter","r","undefined","error","includes","id","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","length","every","active","requestErrors","getRenderedContent","customSpinner","permissionDeniedView","suppressErrorThrow","this","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","Spinner","render","console","Error","connect","mapStateToProps","ownProps","getApis","requestIds","theme","spinner","showImmediately","alt","src","immediate","marginTop","marginLeft","marginRight","img","position","opacity","top","left","general","heightBase","animation","keyframes","animationDelay","SectionErrorBoundary","React","componentDidCatch","errorInfo","setState","renderErrorMessage","showServerError","message","className","classNames","href","Utils","getSupportPageUrl","target","ErrorUtils","mlflowServices","MODEL_REGISTRY","EXPERIMENTS","MODEL_SERVING","RUN_TRACKING","ErrorFallback","Empty","title","FormattedMessage","defaultMessage","description","image","DangerIcon","CustomErrorBoundary","_ref","customFallbackComponent","logErrorToConsole","info","componentStack","ErrorBoundary","onError","FallbackComponent","fallback","withErrorBoundary","service","errorMessage","withRouterNext","location","useLocation","navigate","useNavigate","params","useParams","MetricViewImpl","getCompareRunsPageText","numRuns","numExperiments","values","hasMultipleExperiments","experimentIds","getRunPageLink","runUuids","runNames","Link","to","Routes","getRunPageRoute","text","getCompareRunPageRoute","getCompareExperimentsPageLinkText","getExperimentPageLink","comparedExperimentIds","hasComparedExperimentsBefore","experiments","getCompareExperimentsPageRoute","getExperimentPageRoute","name","metricKey","selectedMetricKeys","getMetricPlotStateFromUrl","search","breadcrumbs","PageHeader","hideSpacer","MetricsPlotPanel","MetricView","compareExperiments","map","experimentId","getExperiment","runUuid","runInfo","getRunInfo","getRunDisplayName","MetricPageImpl","super","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","componentDidMount","loadError","intl","formatMessage","displayGlobalErrorNotification","getExperimentsRequestIds","push","forEach","getRunRequestId","getRunApi","renderPageContent","NotFoundPage","MetricPageWithRouter","searchValues","qs","JSON","parse","hasOwnProperty","e","injectIntl","MetricPage","OverflowMenu","menu","overflowMenu","Menu","_ref2","itemName","onClick","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","componentId","icon","OverflowIcon","_ref3","titleAddOns","preview","spacerSize","dangerouslyAppendEmotionCSS","useDesignSystemTheme","useIntl","_Fragment","Header","Breadcrumb","includeTrailingCaret","b","i","buttons","PreviewBadge","_css","size","Tag","spacing","xs","color","$ebb31c7feaa4405e$export$b16d9fb1a22de840","$hgUW1$createContext","$44d7e150ebc754d2$var$initialState","didCatch","$44d7e150ebc754d2$export$e926676385687eaf","$hgUW1$Component","getDerivedStateFromError","resetErrorBoundary","_this","_len","args","Array","_key","onReset","reason","componentDidUpdate","prevProps","prevState","resetKeys","a","some","item","index","Object","is","$44d7e150ebc754d2$var$hasArrayChanged","next","prev","fallbackRender","childToRender","$hgUW1$isValidElement","$hgUW1$createElement","Provider","value","$75c9d331f9c1ed1a$export$f20aa86254872370","$7c3c25b3f398a9d6$export$c052f6604b7d51fe","context","$hgUW1$useContext","$hgUW1$useState","hasError","memoized","$hgUW1$useMemo","resetBoundary","showBoundary","$62ff477d53f02a5b$export$f0c7a449e0cfaec7","errorBoundaryProps","Wrapped","displayName"],"sourceRoot":""}