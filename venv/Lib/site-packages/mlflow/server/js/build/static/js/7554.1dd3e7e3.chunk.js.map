{"version":3,"file":"static/js/7554.1dd3e7e3.chunk.js","mappings":"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","sources":["common/components/ToggleIconButton.tsx","experiment-tracking/components/experiment-page/hooks/useRunsArtifacts.tsx","experiment-tracking/components/CompareRunArtifactView.tsx","experiment-tracking/components/experiment-page/utils/getCommonArtifacts.ts","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx","shared/web-shared/snippet/theme/databricks-duotone-dark.ts","shared/web-shared/snippet/theme/databricks-light.ts","shared/web-shared/snippet/index.tsx","common/components/JsonFormatting.tsx","shared/building_blocks/Image.tsx","experiment-tracking/components/runs-charts/components/charts/ImageGridPlot.common.tsx","shared/building_blocks/CopyButton.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\n\nexport interface ToggleIconButtonProps extends ButtonProps {\n  pressed?: boolean;\n}\n\n/**\n * WARNING: Temporary component!\n *\n * This component recreates \"Toggle button with icon\" pattern which is not\n * available in the design system yet.\n *\n * TODO: replace this component with the one from DuBois design system when available.\n */\nconst ToggleIconButton = React.forwardRef<HTMLButtonElement, ToggleIconButtonProps>(\n  (props: ToggleIconButtonProps, ref) => {\n    const {\n      pressed,\n      onClick,\n      icon,\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      componentId,\n      analyticsEvents,\n      type,\n      ...remainingProps\n    } = props;\n    const { theme } = useDesignSystemTheme();\n\n    const eventContext = useDesignSystemEventComponentCallbacks({\n      componentType: DesignSystemEventProviderComponentTypes.Button,\n      componentId,\n      analyticsEvents: analyticsEvents ?? [DesignSystemEventProviderAnalyticsEventTypes.OnClick],\n    });\n\n    return (\n      <button\n        onClick={(event) => {\n          eventContext.onClick(event);\n          onClick?.(event);\n        }}\n        css={{\n          cursor: 'pointer',\n          width: theme.general.heightSm,\n          height: theme.general.heightSm,\n          borderRadius: theme.legacyBorders.borderRadiusMd,\n          lineHeight: theme.typography.lineHeightBase,\n          padding: 0,\n          border: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          background: pressed ? theme.colors.actionDefaultBackgroundPress : 'transparent',\n          color: pressed ? theme.colors.actionDefaultTextPress : theme.colors.textSecondary,\n          '&:hover': {\n            background: theme.colors.actionDefaultBackgroundHover,\n            color: theme.colors.actionDefaultTextHover,\n          },\n        }}\n        ref={ref}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        {...remainingProps}\n      >\n        {icon}\n      </button>\n    );\n  },\n);\n\nexport { ToggleIconButton };\n","import { useEffect, useState } from 'react';\nimport { listArtifactsApi } from '../../../actions';\nimport { ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Fetches artifacts given a list of run UUIDs\n * @param runUuids List of run UUIDs\n * @returns Object containing artifacts keyed by run UUID\n */\nexport const useRunsArtifacts = (runUuids: string[]) => {\n  const [artifactsKeyedByRun, setArtifactsKeyedByRun] = useState<Record<string, ArtifactListFilesResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArtifacts = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      const artifactsByRun: Record<string, ArtifactListFilesResponse> = {};\n\n      try {\n        await Promise.all(\n          runUuids.map(async (runUuid) => {\n            const response = listArtifactsApi(runUuid);\n            const artifacts = (await response.payload) as ArtifactListFilesResponse;\n            artifactsByRun[runUuid] = artifacts;\n          }),\n        );\n        setArtifactsKeyedByRun(artifactsByRun);\n      } catch (err: any) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (runUuids.length > 0) {\n      fetchArtifacts();\n    } else {\n      setArtifactsKeyedByRun({});\n      setIsLoading(false);\n    }\n  }, [runUuids]);\n\n  return { artifactsKeyedByRun, isLoading, error };\n};\n","import { useState } from 'react';\nimport ShowArtifactPage from './artifact-view-components/ShowArtifactPage';\nimport { RunInfoEntity } from '../types';\nimport { useRunsArtifacts } from './experiment-page/hooks/useRunsArtifacts';\nimport { getCommonArtifacts } from './experiment-page/utils/getCommonArtifacts';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { ArtifactViewTree } from './ArtifactViewTree';\nimport { getBasename } from '../../common/utils/FileUtils';\n\nexport const CompareRunArtifactView = ({\n  runUuids,\n  runInfos,\n  colWidth,\n}: {\n  runUuids: string[];\n  runInfos: RunInfoEntity[];\n  colWidth: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [artifactPath, setArtifactPath] = useState<string | undefined>();\n\n  const { artifactsKeyedByRun } = useRunsArtifacts(runUuids);\n  const commonArtifacts = getCommonArtifacts(artifactsKeyedByRun);\n\n  if (commonArtifacts.length === 0) {\n    return (\n      <h2>\n        <FormattedMessage\n          defaultMessage=\"No common artifacts to display.\"\n          description=\"Text shown when there are no common artifacts between the runs\"\n        />\n      </h2>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100vh',\n      }}\n    >\n      <div\n        css={{\n          backgroundColor: theme.colors.backgroundPrimary,\n          color: theme.colors.textPrimary,\n          flex: '1 1 0%',\n          whiteSpace: 'nowrap',\n          border: `1px solid ${theme.colors.grey300}`,\n          overflowY: 'auto',\n        }}\n      >\n        <ArtifactViewTree\n          data={commonArtifacts.map((path: string) => ({\n            id: path,\n            active: artifactPath === path,\n            name: getBasename(path),\n          }))}\n          onToggleTreebeard={({ id }) => setArtifactPath(id)}\n        />\n      </div>\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grey300}`,\n          borderLeft: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <div css={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {runUuids.map((runUuid, index) => (\n            <div\n              key={runUuid}\n              style={{\n                width: `${colWidth}px`,\n                borderBottom: `1px solid ${theme.colors.grey300}`,\n                padding: !artifactPath ? theme.spacing.md : 0,\n                overflow: 'auto',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <ShowArtifactPage runUuid={runUuid} artifactRootUri={runInfos[index].artifactUri} path={artifactPath} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ArtifactFileInfo, ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Gets the list of artifacts that are present in all runs in the given list of runs.\n * @param artifactsKeyedByRun Object containing artifacts keyed by run UUID\n * @returns List of common artifacts\n */\nexport const getCommonArtifacts = (artifactsKeyedByRun: Record<string, ArtifactListFilesResponse>) => {\n  const runUuids = Object.keys(artifactsKeyedByRun);\n\n  if (runUuids.length === 0) return [];\n\n  let commonArtifacts = artifactsKeyedByRun[runUuids[0]]?.files\n    ?.map((file: ArtifactFileInfo) => (file.is_dir ? null : file.path))\n    ?.filter((path: string | null) => path !== null);\n\n  if (!commonArtifacts || commonArtifacts.length === 0) return [];\n\n  for (let i = 1; i < runUuids.length; i++) {\n    const currentRunArtifacts = artifactsKeyedByRun[runUuids[i]]?.files?.map((file: any) => file.path);\n    commonArtifacts = commonArtifacts?.filter((path: any) => currentRunArtifacts.includes(path));\n    if (commonArtifacts.length === 0) {\n      break;\n    }\n  }\n\n  return commonArtifacts;\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, type IntlShape } from 'react-intl';\nimport { Spacer, Switch, LegacyTabs, LegacyTooltip, Table, TableRow, TableCell } from '@databricks/design-system';\nimport { type Theme } from '@emotion/react';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { shouldDisableLegacyRunCompareCharts } from '../../common/utils/FeatureUtils';\nimport { RunInfoEntity } from '../types';\nimport { CompareRunArtifactView } from './CompareRunArtifactView';\n\nconst { TabPane } = LegacyTabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: IntlShape;\n};\n\ntype CompareRunViewState = {\n  tableWidth: number | null;\n  onlyShowParamDiff: boolean;\n  onlyShowTagDiff: boolean;\n  onlyShowMetricDiff: boolean;\n};\n\nclass CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: true,\n      onlyShowTagDiff: true,\n      onlyShowMetricDiff: true,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    if (this.state.tableWidth !== null) {\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <TableCell className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </TableCell>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    // Do not attempt to construct experiment links if they are not loaded\n    if (!experimentIds[0] || !experiments[0]) {\n      return '';\n    }\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      this.state.onlyShowParamDiff,\n      true,\n      (key: any, data: any) => key,\n      (value) => {\n        try {\n          const jsonValue = parsePythonDictString(value);\n\n          // Pretty print if parsed value is an object or array\n          if (typeof jsonValue === 'object' && jsonValue !== null) {\n            return this.renderPrettyJson(jsonValue);\n          } else {\n            return value;\n          }\n        } catch (e) {\n          return value;\n        }\n      },\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderPrettyJson(jsonValue: any) {\n    return <pre>{JSON.stringify(jsonValue, null, 2)}</pre>;\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      this.state.onlyShowMetricDiff,\n      true,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fas fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderArtifactTable(colWidth: number) {\n    return <CompareRunArtifactView runUuids={this.props.runUuids} runInfos={this.props.runInfos} colWidth={colWidth} />;\n  }\n\n  renderTagTable(colWidth: number) {\n    const dataRows = this.renderDataRows(this.props.tagLists, colWidth, this.state.onlyShowTagDiff, true);\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: Record<string, string>) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime, this.props.intl) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime, this.props.intl) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <TableRow key={key} className=\"compare-table-row\">\n        <TableCell\n          className=\"head-value sticky-header\"\n          css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n        >\n          {title}\n        </TableCell>\n        {data.map(([runUuid, value]) => (\n          <TableCell className=\"data-value\" key={runUuid as string} css={colWidthStyle}>\n            <LegacyTooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </LegacyTooltip>\n          </TableCell>\n        ))}\n      </TableRow>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const artifactsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Artifacts',\n      description: 'Row group title for artifacts of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    const displayChartSection = !shouldDisableLegacyRunCompareCharts();\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} spacerSize=\"xs\" />\n        {displayChartSection && (\n          <CollapsibleSection\n            title={this.props.intl.formatMessage({\n              defaultMessage: 'Visualizations',\n              description: 'Tabs title for plots on the compare runs page',\n            })}\n          >\n            <LegacyTabs>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Parallel Coordinates Plot\"\n                    // eslint-disable-next-line max-len\n                    description=\"Tab pane title for parallel coordinate plots on the compare runs page\"\n                  />\n                }\n                key=\"parallel-coordinates-plot\"\n              >\n                <ParallelCoordinatesPlotPanel runUuids={this.props.runUuids} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Scatter Plot\"\n                    description=\"Tab pane title for scatterplots on the compare runs page\"\n                  />\n                }\n                key=\"scatter-plot\"\n              >\n                <CompareRunScatter runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Box Plot\"\n                    description=\"Tab pane title for box plot on the compare runs page\"\n                  />\n                }\n                key=\"box-plot\"\n              >\n                <CompareRunBox\n                  runUuids={runUuids}\n                  runInfos={runInfos}\n                  paramLists={paramLists}\n                  metricLists={metricLists}\n                />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Contour Plot\"\n                    description=\"Tab pane title for contour plots on the compare runs page\"\n                  />\n                }\n                key=\"contour-plot\"\n              >\n                <CompareRunContour runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n            </LegacyTabs>\n          </CollapsibleSection>\n        )}\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <Table\n            className=\"table compare-table compare-run-table\"\n            ref={this.runDetailsTableRef}\n            // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <TableRow className=\"compare-table-row\">\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                <FormattedMessage\n                  defaultMessage=\"Run ID:\"\n                  description=\"Row title for the run id on the experiment compare runs page\"\n                />\n              </TableCell>\n              {this.props.runInfos.map((r) => (\n                <TableCell className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                  <LegacyTooltip\n                    title={r.runUuid}\n                    // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                    color=\"gray\"\n                    placement=\"topLeft\"\n                    overlayStyle={{ maxWidth: '400px' }}\n                    mouseEnterDelay={1.0}\n                  >\n                    <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                  </LegacyTooltip>\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow className=\"compare-table-row\">\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                <FormattedMessage\n                  defaultMessage=\"Run Name:\"\n                  description=\"Row title for the run name on the experiment compare runs page\"\n                />\n              </TableCell>\n              {runNames.map((runName, i) => {\n                return (\n                  <TableCell className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                    <div className=\"truncate-text single-line\">\n                      <LegacyTooltip\n                        title={runName}\n                        // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                        color=\"gray\"\n                        placement=\"topLeft\"\n                        overlayStyle={{ maxWidth: '400px' }}\n                        mouseEnterDelay={1.0}\n                      >\n                        {runName}\n                      </LegacyTooltip>\n                    </div>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n            {this.renderTimeRows(colWidthStyle)}\n            {this.shouldShowExperimentNameRow() && (\n              <TableRow className=\"compare-table-row\">\n                <TableCell className=\"data-value\">\n                  <FormattedMessage\n                    defaultMessage=\"Experiment Name:\"\n                    // eslint-disable-next-line max-len\n                    description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                  />\n                </TableCell>\n                {this.renderExperimentNameRowItems()}\n              </TableRow>\n            )}\n          </Table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_570\"\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_581\"\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={artifactsLabel}>{this.renderArtifactTable(colWidth)}</CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_592\"\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: number): Record<string, string> {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <TableRow key={k} className={`${rowClass} compare-table-row`}>\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                {headerMap(k, values)}\n              </TableCell>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <TableCell className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </LegacyTooltip>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    // Skip processing data if run info is not available yet\n    if (!runInfo) {\n      return;\n    }\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n/**\n * Parse a Python dictionary in string format into a JSON object.\n * @param value The Python dictionary string to parse\n * @returns The parsed JSON object, or null if parsing fails\n */\nconst parsePythonDictString = (value: string) => {\n  try {\n    const jsonString = value.replace(/'/g, '\"');\n    return JSON.parse(jsonString);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport { DangerIcon, Empty, Spinner } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  urlDecodeError?: boolean;\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  state: {\n    requestError?: Error | ErrorWrapper;\n  } = {\n    requestError: undefined,\n  };\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props\n        .dispatch(getExperimentApi(experimentId, experimentRequestId))\n        .catch((requestError: Error | ErrorWrapper) => this.setState({ requestError }));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n\n      this.props.dispatch(getRunApi(runUuid, requestId)).catch((requestError: Error | ErrorWrapper) => {\n        this.setState({ requestError });\n      });\n    });\n  }\n\n  render() {\n    // If the error is set, throw it to be caught by the error boundary\n    if (this.state.requestError) {\n      const { requestError } = this.state;\n      const errorToThrow = requestError instanceof Error ? requestError : new Error(requestError.getMessageField?.());\n      throw errorToThrow;\n    }\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          // We suppress throwing error by RequestStateWrapper since we handle it using component and error boundary\n          suppressErrorThrow\n          requestIds={this.requestIds}\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\n/**\n * When integrated via IFrame in Kubeflow it re-encodes the URI (sometimes multiple times), leading to an unparsable JSON.\n * This function decodes the URI until it is parsable.\n */\nconst decodeURI = (uri: string): string => {\n  const decodedURI = decodeURIComponent(uri);\n  if (uri !== decodedURI) {\n    return decodeURI(decodedURI);\n  }\n  return decodedURI;\n};\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  try {\n    const { location } = ownProps;\n    const locationSearchDecoded = decodeURI(location.search);\n    const searchValues = qs.parse(locationSearchDecoded);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const experimentIds = JSON.parse(searchValues['experiments']);\n    return { experimentIds, runUuids };\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw new SyntaxError(`Error while parsing URL: ${e.message}`);\n    }\n\n    throw e;\n  }\n};\n\nconst CompareRunPageErrorFallback = ({ error }: { error: Error }) => (\n  <div css={{ height: '100%', alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n    <Empty\n      title={\n        <FormattedMessage\n          defaultMessage=\"Error while loading compare runs page\"\n          description=\"Title of the error state on the run compare page\"\n        />\n      }\n      description={error.message}\n      image={<DangerIcon />}\n    />\n  </div>\n);\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(\n  ErrorUtils.mlflowServices.RUN_TRACKING,\n  CompareRunPage,\n  undefined,\n  CompareRunPageErrorFallback,\n);\n","/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport python from 'react-syntax-highlighter/dist/cjs/languages/prism/python';\nimport json from 'react-syntax-highlighter/dist/cjs/languages/prism/json';\n\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('json', json);\n\nimport duotoneDarkStyle from './theme/databricks-duotone-dark';\nimport lightStyle from './theme/databricks-light';\nimport { CSSProperties, ReactNode } from 'react';\nimport { pick } from 'lodash';\n\nexport type CodeSnippetTheme = 'duotoneDark' | 'light';\n\nexport const buttonBackgroundColorDark = 'rgba(140, 203, 255, 0)';\nexport const buttonColorDark = 'rgba(255, 255, 255, 0.84)';\nexport const buttonHoverColorDark = '#8ccbffcc';\nexport const buttonHoverBackgroundColorDark = 'rgba(140, 203, 255, 0.08)';\nexport const duboisAlertBackgroundColor = '#fff0f0';\nexport const snippetPadding = '24px';\n\nconst themesStyles: Record<CodeSnippetTheme, any> = {\n  light: lightStyle,\n  duotoneDark: duotoneDarkStyle,\n};\n\nexport type CodeSnippetLanguage = 'python' | 'json' | 'text';\n\nexport interface CodeSnippetProps {\n  /**\n   * The code string\n   */\n  children: string;\n  /**\n   * The actions that are displayed on the right top corner of the component\n   *  see `./actions` for built-in actions\n   */\n  actions?: NonNullable<ReactNode> | NonNullable<ReactNode>[];\n  /**\n   * The theme, default theme is `light`\n   */\n  theme?: CodeSnippetTheme;\n  /**\n   * Language of the code (`children`)\n   */\n  language: CodeSnippetLanguage;\n  /**\n   * Custom styles (passed to the internal `<pre>`)\n   */\n  style?: CSSProperties;\n  /**\n   * Whether to show line numbers on the left or not\n   */\n  showLineNumbers?: boolean;\n  /**\n   * Custom styles for line numbers\n   */\n  lineNumberStyle?: CSSProperties;\n  /**\n   * Whether or not to wrap long lines\n   */\n  wrapLongLines?: boolean;\n}\n\n/**\n * `CodeSnippet` is used for highlighting code, use this instead of\n */\nexport function CodeSnippet({\n  theme = 'light',\n  language,\n  actions,\n  style,\n  children,\n  showLineNumbers,\n  lineNumberStyle,\n  wrapLongLines,\n}: CodeSnippetProps) {\n  const customStyle = {\n    border: 'none',\n    borderRadius: 0,\n    margin: 0,\n    padding: snippetPadding,\n    ...style,\n  };\n\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={showLineNumbers}\n      lineNumberStyle={lineNumberStyle}\n      language={language}\n      style={themesStyles[theme]}\n      customStyle={customStyle}\n      codeTagProps={{\n        style: pick(style, 'backgroundColor'),\n      }}\n      wrapLongLines={wrapLongLines}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n","import React from 'react';\nimport { CodeSnippet } from '@databricks/web-shared/snippet';\nimport { isObject } from 'lodash';\n\ninterface JsonPreviewProps {\n  json: string;\n  wrapperStyle?: React.CSSProperties;\n  overlayStyle?: React.CSSProperties;\n  codeSnippetStyle?: React.CSSProperties;\n}\n\nexport const JsonPreview: React.FC<JsonPreviewProps> = ({ json, wrapperStyle, overlayStyle, codeSnippetStyle }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  const defaultWrapperStyle: React.CSSProperties = {\n    position: 'relative',\n    maxHeight: 'calc(1.5em * 9)',\n    overflow: 'hidden',\n  };\n\n  const defaultOverlayStyle: React.CSSProperties = {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    left: 6,\n    height: '2em',\n    background: 'linear-gradient(transparent, white)',\n  };\n\n  const defaultCodeSnippetStyle: React.CSSProperties = {\n    padding: '5px',\n    overflowX: 'hidden',\n  };\n\n  return (\n    <div style={{ ...defaultWrapperStyle, ...wrapperStyle }}>\n      {isJsonContent ? (\n        <>\n          <CodeSnippet language=\"json\" style={{ ...defaultCodeSnippetStyle, ...codeSnippetStyle }}>\n            {formattedJson}\n          </CodeSnippet>\n          <div css={{ ...defaultOverlayStyle, ...overlayStyle }}></div>\n        </>\n      ) : (\n        <>{json}</>\n      )}\n    </div>\n  );\n};\n\nfunction useFormattedJson(json: string) {\n  return React.useMemo(() => {\n    try {\n      const parsed = JSON.parse(json);\n      const isJson = isObject(parsed) && typeof parsed !== 'function' && !(parsed instanceof Date);\n      return {\n        formattedJson: isJson ? JSON.stringify(parsed, null, 2) : json,\n        isJsonContent: isJson,\n      };\n    } catch (e) {\n      return {\n        formattedJson: json,\n        isJsonContent: false,\n      };\n    }\n  }, [json]);\n}\n\nexport const FormattedJsonDisplay: React.FC<{ json: string }> = ({ json }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  return (\n    <div css={{ whiteSpace: 'pre-wrap' }}>\n      {isJsonContent ? (\n        <CodeSnippet language=\"json\" wrapLongLines>\n          {formattedJson}\n        </CodeSnippet>\n      ) : (\n        <span>{json}</span>\n      )}\n    </div>\n  );\n};\n","import {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  CloseIcon,\n  DesignSystemContext,\n  RedoIcon,\n  UndoIcon,\n  ZoomInIcon,\n  ZoomOutIcon,\n} from '@databricks/design-system';\nimport { useContext } from 'react';\nimport RcImage from 'rc-image';\nimport './Image.css';\n\nconst icons = {\n  rotateLeft: <UndoIcon />,\n  rotateRight: <RedoIcon />,\n  zoomIn: <ZoomInIcon />,\n  zoomOut: <ZoomOutIcon />,\n  close: <CloseIcon />,\n  left: <ArrowLeftIcon />,\n  right: <ArrowRightIcon />,\n};\n\nexport const ImagePreviewGroup = ({\n  children,\n  visible,\n  onVisibleChange,\n}: {\n  children: React.ReactNode;\n  visible: boolean;\n  onVisibleChange: (v: boolean) => void;\n}) => {\n  const { getPopupContainer } = useContext(DesignSystemContext);\n\n  return (\n    <RcImage.PreviewGroup\n      icons={icons}\n      preview={{\n        visible: visible,\n        getContainer: getPopupContainer,\n        onVisibleChange: (v) => onVisibleChange(v),\n      }}\n    >\n      {children}\n    </RcImage.PreviewGroup>\n  );\n};\n\nexport { RcImage as Image };\n","import { ImageIcon, Spinner } from '@databricks/design-system';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { getArtifactLocationUrl } from '@mlflow/mlflow/src/common/utils/ArtifactUtils';\nimport { ImageEntity } from '@mlflow/mlflow/src/experiment-tracking/types';\nimport { useState, useEffect } from 'react';\nimport { Typography } from '@databricks/design-system';\nimport { ImagePreviewGroup, Image } from '../../../../../shared/building_blocks/Image';\n\n/**\n * Despite image size being dynamic, we want to set a minimum size for the grid images.\n */\nexport const MIN_GRID_IMAGE_SIZE = 200;\n\ntype ImagePlotProps = {\n  imageUrl: string;\n  compressedImageUrl: string;\n  imageSize?: number;\n  maxImageSize?: number;\n};\n\nexport const ImagePlot = ({ imageUrl, compressedImageUrl, imageSize, maxImageSize }: ImagePlotProps) => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const [imageLoading, setImageLoading] = useState(true);\n\n  useEffect(() => {\n    // Load the image in the memory (should reuse the same request) in order to get the loading state\n    setImageLoading(true);\n    const img = new window.Image();\n    img.onload = () => setImageLoading(false);\n    img.onerror = () => setImageLoading(false);\n    img.src = compressedImageUrl;\n    return () => {\n      img.src = '';\n    };\n  }, [compressedImageUrl]);\n\n  return (\n    <div css={{ width: imageSize || '100%', height: imageSize || '100%' }}>\n      <div css={{ display: 'contents' }}>\n        {compressedImageUrl === undefined || imageLoading ? (\n          <div\n            css={{\n              width: '100%',\n              backgroundColor: theme.colors.backgroundSecondary,\n              display: 'flex',\n              aspectRatio: '1',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Spinner />\n          </div>\n        ) : (\n          <div\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: imageSize || '100%',\n              aspectRatio: '1',\n              maxWidth: maxImageSize,\n              maxHeight: maxImageSize,\n              backgroundColor: theme.colors.backgroundSecondary,\n              '.rc-image': {\n                cursor: 'pointer',\n              },\n            }}\n          >\n            <ImagePreviewGroup visible={previewVisible} onVisibleChange={setPreviewVisible}>\n              <Image\n                src={compressedImageUrl}\n                preview={{ src: imageUrl }}\n                style={{ maxWidth: maxImageSize || '100%', maxHeight: maxImageSize || '100%' }}\n              />\n            </ImagePreviewGroup>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const ImagePlotWithHistory = ({\n  metadataByStep,\n  imageSize,\n  step,\n  runUuid,\n}: {\n  metadataByStep: Record<number, ImageEntity>;\n  imageSize?: number;\n  step: number;\n  runUuid: string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  if (metadataByStep[step] === undefined) {\n    return (\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          width: imageSize,\n          backgroundColor: theme.colors.backgroundSecondary,\n          padding: theme.spacing.md,\n          aspectRatio: '1',\n        }}\n      >\n        <ImageIcon />\n        <FormattedMessage\n          defaultMessage=\"No image logged at this step\"\n          description=\"Experiment tracking > runs charts > charts > image plot with history > no image text\"\n        />\n      </div>\n    );\n  }\n  return (\n    <ImagePlot\n      imageUrl={getArtifactLocationUrl(metadataByStep[step].filepath, runUuid)}\n      compressedImageUrl={getArtifactLocationUrl(metadataByStep[step].compressed_filepath, runUuid)}\n      imageSize={imageSize}\n    />\n  );\n};\n\nexport const EmptyImageGridPlot = () => {\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        fontSize: 16,\n      }}\n    >\n      <Typography.Title css={{ marginTop: 16 }} color=\"secondary\" level={3}>\n        Compare logged images\n      </Typography.Title>\n      <Typography.Text css={{ marginBottom: 16 }} color=\"secondary\">\n        Use the image grid chart to compare logged images across runs.\n      </Typography.Text>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n"],"names":["ToggleIconButton","React","props","ref","pressed","onClick","icon","onBlur","onFocus","onMouseEnter","onMouseLeave","componentId","analyticsEvents","type","remainingProps","theme","useDesignSystemTheme","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","Button","DesignSystemEventProviderAnalyticsEventTypes","OnClick","_jsx","event","css","_css","cursor","width","general","heightSm","height","borderRadius","legacyBorders","borderRadiusMd","lineHeight","typography","lineHeightBase","padding","border","display","alignItems","justifyContent","background","colors","actionDefaultBackgroundPress","color","actionDefaultTextPress","textSecondary","actionDefaultBackgroundHover","actionDefaultTextHover","children","useRunsArtifacts","runUuids","artifactsKeyedByRun","setArtifactsKeyedByRun","useState","isLoading","setIsLoading","error","setError","useEffect","length","async","artifactsByRun","Promise","all","map","response","listArtifactsApi","runUuid","artifacts","payload","err","fetchArtifacts","_ref2","name","styles","_ref4","CompareRunArtifactView","_ref","runInfos","colWidth","artifactPath","setArtifactPath","commonArtifacts","_artifactsKeyedByRun$","_artifactsKeyedByRun$2","_artifactsKeyedByRun$3","Object","keys","files","file","is_dir","path","filter","i","_artifactsKeyedByRun$4","_artifactsKeyedByRun$5","_commonArtifacts","currentRunArtifacts","includes","getCommonArtifacts","FormattedMessage","id","defaultMessage","_jsxs","backgroundColor","backgroundPrimary","textPrimary","flex","whiteSpace","grey300","overflowY","ArtifactViewTree","data","active","getBasename","onToggleTreebeard","_ref3","borderLeft","flexDirection","overflow","index","style","borderBottom","spacing","md","ShowArtifactPage","artifactRootUri","artifactUri","TabPane","LegacyTabs","_ref5","CompareRunView","Component","constructor","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","e","table","current","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","block","target","scrollLeft","componentDidMount","pageTitle","intl","formatMessage","runs","Utils","updatePageTitle","window","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","experimentId","basename","TableCell","className","Link","to","Routes","getExperimentPageRoute","title","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","key","value","jsonValue","parsePythonDictString","renderPrettyJson","Table","onScroll","JSON","stringify","renderMetricTable","metricLists","getMetricPageRoute","info","uuid","idx","undefined","formatMetric","renderArtifactTable","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","_ref6","_ref7","_ref8","_ref9","TableRow","_ref10","LegacyTooltip","placement","overlayStyle","maxWidth","dangerouslySetAntdProps","mouseEnterDelay","render","runNames","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","artifactsLabel","tagsLabel","diffOnlyLabel","displayChartSection","shouldDisableLegacyRunCompareCharts","PageHeader","spacerSize","CollapsibleSection","tab","ParallelCoordinatesPlotPanel","CompareRunScatter","runDisplayNames","CompareRunBox","CompareRunContour","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","Switch","label","join","checked","onChange","Spacer","size","minWidth","list","onlyShowDiff","highlightDiff","arguments","headerMap","formatter","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","jsonString","replace","parse","connect","mapStateToProps","ownProps","compareExperiments","getExperiment","getRunInfo","push","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","_ref11","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","requestError","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","catch","requestId","getRunApi","_requestError$getMess","Error","getMessageField","call","PageContainer","RequestStateWrapper","suppressErrorThrow","decodeURI","uri","decodedURI","decodeURIComponent","CompareRunPage","withRouterNext","location","locationSearchDecoded","search","searchValues","qs","SyntaxError","message","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING","Empty","description","image","DangerIcon","fontFamily","fontSize","direction","textAlign","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","margin","textShadow","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","italic","fontStyle","important","fontWeight","bold","Outline","OutlineOffset","borderRightColor","wordWrap","position","attribute","builtin","char","class","constant","hexcode","symbol","SyntaxHighlighter","registerLanguage","python","json","snippetPadding","themesStyles","light","lightStyle","duotoneDark","duotoneDarkStyle","CodeSnippet","language","actions","showLineNumbers","lineNumberStyle","wrapLongLines","customStyle","codeTagProps","pick","JsonPreview","wrapperStyle","codeSnippetStyle","formattedJson","isJsonContent","useFormattedJson","maxHeight","_Fragment","overflowX","bottom","right","left","parsed","isJson","isObject","Date","FormattedJsonDisplay","icons","rotateLeft","UndoIcon","rotateRight","RedoIcon","zoomIn","ZoomInIcon","zoomOut","ZoomOutIcon","close","CloseIcon","ArrowLeftIcon","ArrowRightIcon","ImagePreviewGroup","visible","onVisibleChange","getPopupContainer","useContext","DesignSystemContext","RcImage","PreviewGroup","preview","getContainer","v","MIN_GRID_IMAGE_SIZE","ImagePlot","imageUrl","compressedImageUrl","imageSize","maxImageSize","previewVisible","setPreviewVisible","imageLoading","setImageLoading","img","Image","onload","onerror","src","backgroundSecondary","aspectRatio","Spinner","ImagePlotWithHistory","metadataByStep","step","ImageIcon","getArtifactLocationUrl","filepath","compressed_filepath","EmptyImageGridPlot","Typography","Title","level","Text","CopyButton","copyText","showLabel","buttonProps","showTooltip","setShowTooltip","handleClick","navigator","clipboard","writeText","setTimeout","handleMouseLeave"],"sourceRoot":""}