{"version":3,"file":"static/js/225.f5e895c5.chunk.js","mappings":"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","sources":["common/components/RequestStateWrapper.tsx","common/components/Spinner.tsx","common/components/error-boundaries/SectionErrorBoundary.tsx","common/utils/MarkdownUtils.ts","common/utils/withRouterNext.tsx","model-registry/constants.tsx","shared/building_blocks/PageHeader.tsx","shared/building_blocks/PreviewBadge.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport './RequestStateWrapper.css';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype OwnRequestStateWrapperProps = {\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n  suppressErrorThrow?: boolean;\n};\n\ntype RequestStateWrapperState = any;\n\ntype RequestStateWrapperProps = OwnRequestStateWrapperProps & typeof RequestStateWrapper.defaultProps;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView, suppressErrorThrow } = this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError && !suppressErrorThrow) {\n        triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\n// @ts-expect-error TS(7006): Parameter 'state' implicitly has an 'any' type.\nconst mapStateToProps = (state, ownProps) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport spinner from '../static/mlflow-spinner.png';\nimport { keyframes } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport class Spinner extends Component<Props> {\n  render() {\n    return (\n      // @ts-expect-error TS(2322): Type '(theme: Theme) => { width: number; marginTop... Remove this comment to see the full error message\n      <div css={(theme) => styles.spinner(theme, this.props.showImmediately)}>\n        <img alt=\"Page loading...\" src={spinner} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  // @ts-expect-error TS(7006): Parameter 'theme' implicitly has an 'any' type.\n  spinner: (theme, immediate) => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? 0 : '0.5s',\n    },\n  }),\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i data-testid=\"icon-fail\" className=\"fa fa-exclamation-triangle icon-fail\" css={classNames.wrapper} />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport { useCallback } from 'react';\nimport sanitizeHtml from 'sanitize-html';\n// @ts-expect-error TS(7016): Could not find a declaration file for module 'show... Remove this comment to see the full error message\nimport { Converter } from 'showdown';\n\n// Use Github-like Markdown (i.e. support for tasklists, strikethrough,\n// simple line breaks, code blocks, emojis)\nconst DEFAULT_MARKDOWN_FLAVOR = 'github';\n\nlet _converter: Converter | null = null;\n\nexport const getMarkdownConverter = () => {\n  // Reuse the same converter instance if available\n  if (_converter) {\n    return _converter;\n  }\n  _converter = new Converter();\n  _converter.setFlavor(DEFAULT_MARKDOWN_FLAVOR);\n  return _converter;\n};\n\n// Options for HTML sanitizer.\n// See https://www.npmjs.com/package/sanitize-html#what-are-the-default-options for usage.\n// These options were chosen to be similar to Github's allowlist but simpler (i.e. we don't\n// do any transforms of the contained HTML and we disallow script entirely instead of\n// removing contents).\nconst sanitizerOptions = {\n  allowedTags: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'h7',\n    'h8',\n    'blockquote',\n    'p',\n    'a',\n    'ul',\n    'ol',\n    'nl',\n    'li',\n    'ins',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'strike',\n    'code',\n    'hr',\n    'br',\n    'div',\n    'table',\n    'thead',\n    'tbody',\n    'tr',\n    'th',\n    'td',\n    'pre',\n    'del',\n    'sup',\n    'sub',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'samp',\n    'var',\n    'hr',\n    'rt',\n    'rp',\n    'summary',\n    'iframe',\n    'img',\n    'caption',\n    'figure',\n  ],\n  allowedAttributes: {\n    a: ['href', 'name', 'target'],\n    img: ['src', 'longdesc'],\n    div: ['itemscope', 'itemtype'],\n  },\n};\n\nexport const sanitizeConvertedHtml = (dirtyHtml: any) => {\n  return sanitizeHtml(dirtyHtml, sanitizerOptions);\n};\n\nexport const forceAnchorTagNewTab = (html: any) => {\n  return html.replace(new RegExp('<a', 'g'), '<a target=\"_blank\"');\n};\n\nexport const useMarkdownConverter = () =>\n  useCallback((markdown?: string) => {\n    const converter = getMarkdownConverter();\n    const html = converter.makeHtml(markdown);\n    return sanitizeConvertedHtml(html);\n  }, []);\n","import React from 'react';\n\nimport {\n  type Location,\n  type Params as RouterDOMParams,\n  type NavigateOptions,\n  type To,\n  useLocation,\n  useNavigate,\n  useParams,\n} from './RoutingUtils';\n\nexport interface WithRouterNextProps<Params extends RouterDOMParams = RouterDOMParams> {\n  navigate: ReturnType<typeof useNavigate>;\n  location: Location;\n  params: Params;\n}\n\n/**\n * This HoC serves as a retrofit for class components enabling them to use\n * react-router v6's location, navigate and params being injected via props.\n */\nexport const withRouterNext =\n  <\n    T,\n    Props extends JSX.IntrinsicAttributes &\n      JSX.LibraryManagedAttributes<React.ComponentType<T>, React.PropsWithChildren<T>>,\n    Params extends RouterDOMParams = RouterDOMParams,\n  >(\n    Component: React.ComponentType<T>,\n  ) =>\n  (\n    props: Omit<\n      Props,\n      | 'location'\n      | 'navigate'\n      | 'params'\n      | 'navigationType'\n      /* prettier-ignore*/\n    >,\n  ) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams<Params>();\n\n    return (\n      <Component\n        /* prettier-ignore */\n        params={params as Params}\n        location={location}\n        navigate={navigate}\n        {...(props as Props)}\n      />\n    );\n  };\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { Tag } from '@databricks/design-system';\n// @ts-expect-error TS(2306): File '/Users/elad.ossadon/universe4/mlflow/web/js/... Remove this comment to see the full error message\n// eslint-disable-next-line\nimport * as overrides from './constant-overrides'; // eslint-disable-line import/no-namespace\nimport { FormattedMessage } from 'react-intl';\nimport { ReadyIcon } from './utils';\n\nexport const Stages = {\n  NONE: 'None',\n  STAGING: 'Staging',\n  PRODUCTION: 'Production',\n  ARCHIVED: 'Archived',\n};\n\nexport const ACTIVE_STAGES = [Stages.STAGING, Stages.PRODUCTION];\n\nexport const StageLabels = {\n  [Stages.NONE]: 'None',\n  [Stages.STAGING]: 'Staging',\n  [Stages.PRODUCTION]: 'Production',\n  [Stages.ARCHIVED]: 'Archived',\n};\n\nexport const StageTagComponents = {\n  [Stages.NONE]: (\n    <Tag componentId=\"codegen_mlflow_app_src_model-registry_constants.tsx_37\">{StageLabels[Stages.NONE]}</Tag>\n  ),\n  [Stages.STAGING]: (\n    <Tag componentId=\"codegen_mlflow_app_src_model-registry_constants.tsx_38\" color=\"lemon\">\n      {StageLabels[Stages.STAGING]}\n    </Tag>\n  ),\n  [Stages.PRODUCTION]: (\n    <Tag componentId=\"codegen_mlflow_app_src_model-registry_constants.tsx_39\" color=\"lime\">\n      {StageLabels[Stages.PRODUCTION]}\n    </Tag>\n  ),\n  [Stages.ARCHIVED]: (\n    <Tag componentId=\"codegen_mlflow_app_src_model-registry_constants.tsx_40\" color=\"charcoal\">\n      {StageLabels[Stages.ARCHIVED]}\n    </Tag>\n  ),\n};\n\nexport interface ModelVersionActivity {\n  creation_timestamp?: number;\n  user_id?: string;\n  activity_type: ActivityTypes;\n  comment?: string;\n  last_updated_timestamp?: number;\n  from_stage?: string;\n  to_stage?: string;\n  system_comment?: string;\n  id?: string;\n}\n\nexport enum ActivityTypes {\n  APPLIED_TRANSITION = 'APPLIED_TRANSITION',\n  REQUESTED_TRANSITION = 'REQUESTED_TRANSITION',\n  SYSTEM_TRANSITION = 'SYSTEM_TRANSITION',\n  CANCELLED_REQUEST = 'CANCELLED_REQUEST',\n  APPROVED_REQUEST = 'APPROVED_REQUEST',\n  REJECTED_REQUEST = 'REJECTED_REQUEST',\n  NEW_COMMENT = 'NEW_COMMENT',\n}\n\nexport interface PendingModelVersionActivity {\n  type: ActivityTypes;\n  to_stage: string;\n}\n\nexport const EMPTY_CELL_PLACEHOLDER = <div style={{ marginTop: -12 }}>_</div>;\n\nexport const ModelVersionStatus = {\n  READY: 'READY',\n};\n\nexport const DefaultModelVersionStatusMessages = {\n  [ModelVersionStatus.READY]: (\n    <FormattedMessage defaultMessage=\"Ready.\" description=\"Default status message for model versions that are ready\" />\n  ),\n};\n\nexport const modelVersionStatusIconTooltips = {\n  [ModelVersionStatus.READY]: (\n    <FormattedMessage\n      defaultMessage=\"Ready\"\n      description=\"Tooltip text for ready model version status icon in model view page\"\n    />\n  ),\n};\n\nexport const ModelVersionStatusIcons = {\n  [ModelVersionStatus.READY]: <ReadyIcon />,\n};\n\nexport const MODEL_VERSION_STATUS_POLL_INTERVAL = 10000;\n\n// Number of registered models initially shown on the model registry list page\nconst REGISTERED_MODELS_PER_PAGE = 10;\n\n// Variant for compact tables (unified list pattern), this is\n// going to become a default soon\nexport const REGISTERED_MODELS_PER_PAGE_COMPACT = 25;\n\nexport const MAX_RUNS_IN_SEARCH_MODEL_VERSIONS_FILTER = 75; // request size has a limit of 4KB\n\nexport const REGISTERED_MODELS_SEARCH_NAME_FIELD = 'name';\n\nexport const REGISTERED_MODELS_SEARCH_TIMESTAMP_FIELD = 'timestamp';\n\nexport const AntdTableSortOrder = {\n  ASC: 'ascend',\n  DESC: 'descend',\n};\n\nexport const archiveExistingVersionToolTipText = (currentStage: any) => (\n  <FormattedMessage\n    defaultMessage=\"Model versions in the `{currentStage}` stage will be moved to the\n     `Archived` stage.\"\n    description=\"Tooltip text for transitioning existing model versions in stage to archived\n     in the model versions page\"\n    values={{ currentStage: currentStage }}\n  />\n);\n\nexport const mlflowAliasesLearnMoreLink =\n  'https://mlflow.org/docs/latest/model-registry.html#using-registered-model-aliases';\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-test-id={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-test-id=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_shared_building_blocks_previewbadge.tsx_14\"\n      className={className}\n      css={{ marginLeft: theme.spacing.xs }}\n      color=\"turquoise\"\n    >\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n"],"names":["RequestStateWrapper","Component","constructor","arguments","state","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","filter","r","undefined","error","includes","id","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","length","every","active","requestErrors","getRenderedContent","children","customSpinner","permissionDeniedView","suppressErrorThrow","this","props","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","_jsx","Spinner","render","defaultProps","console","Error","connect","mapStateToProps","ownProps","getApis","requestIds","css","theme","styles","spinner","showImmediately","alt","src","immediate","width","marginTop","marginLeft","marginRight","img","position","opacity","top","left","general","heightBase","height","animation","keyframes","animationDelay","SectionErrorBoundary","React","componentDidCatch","errorInfo","setState","renderErrorMessage","showServerError","_jsxs","message","className","classNames","wrapper","href","Utils","getSupportPageUrl","target","_converter","getMarkdownConverter","Converter","setFlavor","sanitizerOptions","allowedTags","allowedAttributes","a","div","sanitizeConvertedHtml","dirtyHtml","sanitizeHtml","forceAnchorTagNewTab","html","replace","RegExp","withRouterNext","location","useLocation","navigate","useNavigate","params","useParams","Stages","NONE","STAGING","PRODUCTION","ARCHIVED","ACTIVE_STAGES","StageLabels","StageTagComponents","Tag","componentId","color","ActivityTypes","style","ModelVersionStatus","READY","DefaultModelVersionStatusMessages","FormattedMessage","defaultMessage","modelVersionStatusIconTooltips","ModelVersionStatusIcons","ReadyIcon","MODEL_VERSION_STATUS_POLL_INTERVAL","REGISTERED_MODELS_PER_PAGE_COMPACT","MAX_RUNS_IN_SEARCH_MODEL_VERSIONS_FILTER","REGISTERED_MODELS_SEARCH_NAME_FIELD","REGISTERED_MODELS_SEARCH_TIMESTAMP_FIELD","AntdTableSortOrder","ASC","DESC","archiveExistingVersionToolTipText","currentStage","values","mlflowAliasesLearnMoreLink","OverflowMenu","_ref","menu","overflowMenu","Menu","map","_ref2","itemName","onClick","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","icon","OverflowIcon","_ref3","name","PageHeader","title","breadcrumbs","titleAddOns","preview","spacerSize","hideSpacer","dangerouslyAppendEmotionCSS","useDesignSystemTheme","useIntl","_Fragment","Header","Breadcrumb","includeTrailingCaret","b","i","buttons","PreviewBadge","Spacer","_css","flexShrink","display","size","spacing","xs"],"sourceRoot":""}