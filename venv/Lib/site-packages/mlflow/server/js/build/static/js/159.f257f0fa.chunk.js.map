{"version":3,"file":"static/js/159.f257f0fa.chunk.js","mappings":"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","sources":["common/components/CollapsibleSection.tsx","common/components/JsonFormatting.tsx","common/components/ToggleIconButton.tsx","experiment-tracking/components/experiment-page/hooks/useRunsArtifacts.tsx","experiment-tracking/components/CompareRunArtifactView.tsx","experiment-tracking/components/experiment-page/utils/getCommonArtifacts.ts","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx","experiment-tracking/components/runs-charts/components/charts/ImageGridPlot.common.tsx","shared/building_blocks/CopyButton.tsx","shared/building_blocks/Image.tsx","shared/web-shared/snippet/theme/databricks-duotone-dark.ts","shared/web-shared/snippet/theme/databricks-light.ts","shared/web-shared/snippet/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { SectionErrorBoundary } from './error-boundaries/SectionErrorBoundary';\nimport {\n  ChevronRightIcon,\n  useDesignSystemTheme,\n  Accordion,\n  DesignSystemThemeInterface,\n  importantify,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\ninterface CollapsibleSectionProps {\n  title: string | any;\n  forceOpen?: boolean;\n  children: React.ReactNode;\n  showServerError?: boolean;\n  defaultCollapsed?: boolean;\n  onChange?: (key: string | string[]) => void;\n  className?: string;\n  componentId?: string;\n}\n\n// Custom styles to make <Accordion> look like previously used <Collapse> from antd\nconst getAccordionStyles = ({\n  theme,\n  getPrefixedClassName,\n}: Pick<DesignSystemThemeInterface, 'theme' | 'getPrefixedClassName'>) => {\n  const clsPrefix = getPrefixedClassName('collapse');\n\n  const classItem = `.${clsPrefix}-item`;\n  const classHeader = `.${clsPrefix}-header`;\n  const classContentBox = `.${clsPrefix}-content-box`;\n\n  return {\n    fontSize: 14,\n    [`& > ${classItem} > ${classHeader}`]: {\n      paddingLeft: 0,\n      paddingTop: 12,\n      paddingBottom: 12,\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: 16,\n      fontWeight: 'normal',\n      lineHeight: theme.typography.lineHeightLg,\n    },\n    [classContentBox]: {\n      padding: `${theme.spacing.xs}px 0 ${theme.spacing.md}px 0`,\n    },\n  };\n};\n\nexport function CollapsibleSection(props: CollapsibleSectionProps) {\n  const {\n    title,\n    forceOpen,\n    showServerError,\n    defaultCollapsed,\n    onChange,\n    className,\n    componentId = 'mlflow.common.generic_collapsible_section',\n  } = props;\n\n  // We need to spread `activeKey` into <Collapse/> as an optional prop because its enumerability\n  // affects rendering, i.e. passing `activeKey={undefined}` is different from not passing activeKey\n  const activeKeyProp = forceOpen && { activeKey: ['1'] };\n  const defaultActiveKey = defaultCollapsed ? null : ['1'];\n\n  const { theme, getPrefixedClassName } = useDesignSystemTheme();\n  const { formatMessage } = useIntl();\n\n  const getExpandIcon = useCallback(\n    ({ isActive }: { isActive?: boolean }) => (\n      <div\n        css={importantify({ width: theme.general.heightBase / 2, transform: isActive ? 'rotate(90deg)' : undefined })}\n      >\n        <ChevronRightIcon\n          css={{\n            svg: { width: theme.general.heightBase / 2, height: theme.general.heightBase / 2 },\n          }}\n          aria-label={\n            isActive\n              ? formatMessage(\n                  {\n                    defaultMessage: 'collapse {title}',\n                    description: 'Common component > collapsible section > alternative label when expand',\n                  },\n                  { title },\n                )\n              : formatMessage(\n                  {\n                    defaultMessage: 'expand {title}',\n                    description: 'Common component > collapsible section > alternative label when collapsed',\n                  },\n                  { title },\n                )\n          }\n        />\n      </div>\n    ),\n    [theme, title, formatMessage],\n  );\n\n  return (\n    <Accordion\n      componentId={componentId}\n      {...activeKeyProp}\n      dangerouslyAppendEmotionCSS={getAccordionStyles({ theme, getPrefixedClassName })}\n      dangerouslySetAntdProps={{\n        className,\n        expandIconPosition: 'left',\n        expandIcon: getExpandIcon,\n      }}\n      defaultActiveKey={defaultActiveKey ?? undefined}\n      onChange={onChange}\n    >\n      <Accordion.Panel header={title} key=\"1\">\n        <SectionErrorBoundary showServerError={showServerError}>{props.children}</SectionErrorBoundary>\n      </Accordion.Panel>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport { CodeSnippet } from '@databricks/web-shared/snippet';\nimport { isObject } from 'lodash';\n\ninterface JsonPreviewProps {\n  json: string;\n  wrapperStyle?: React.CSSProperties;\n  overlayStyle?: React.CSSProperties;\n  codeSnippetStyle?: React.CSSProperties;\n}\n\nexport const JsonPreview: React.FC<JsonPreviewProps> = ({ json, wrapperStyle, overlayStyle, codeSnippetStyle }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  const defaultWrapperStyle: React.CSSProperties = {\n    position: 'relative',\n    maxHeight: 'calc(1.5em * 9)',\n    overflow: 'hidden',\n  };\n\n  const defaultOverlayStyle: React.CSSProperties = {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    left: 6,\n    height: '2em',\n    background: 'linear-gradient(transparent, white)',\n  };\n\n  const defaultCodeSnippetStyle: React.CSSProperties = {\n    padding: '5px',\n    overflowX: 'hidden',\n  };\n\n  return (\n    <div style={{ ...defaultWrapperStyle, ...wrapperStyle }}>\n      {isJsonContent ? (\n        <>\n          <CodeSnippet language=\"json\" style={{ ...defaultCodeSnippetStyle, ...codeSnippetStyle }}>\n            {formattedJson}\n          </CodeSnippet>\n          <div css={{ ...defaultOverlayStyle, ...overlayStyle }}></div>\n        </>\n      ) : (\n        <>{json}</>\n      )}\n    </div>\n  );\n};\n\nfunction useFormattedJson(json: string) {\n  return React.useMemo(() => {\n    try {\n      const parsed = JSON.parse(json);\n      const isJson = isObject(parsed) && typeof parsed !== 'function' && !(parsed instanceof Date);\n      return {\n        formattedJson: isJson ? JSON.stringify(parsed, null, 2) : json,\n        isJsonContent: isJson,\n      };\n    } catch (e) {\n      return {\n        formattedJson: json,\n        isJsonContent: false,\n      };\n    }\n  }, [json]);\n}\n\nexport const FormattedJsonDisplay: React.FC<{ json: string }> = ({ json }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  return (\n    <div css={{ whiteSpace: 'pre-wrap' }}>\n      {isJsonContent ? (\n        <CodeSnippet language=\"json\" wrapLongLines>\n          {formattedJson}\n        </CodeSnippet>\n      ) : (\n        <span>{json}</span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\n\nexport interface ToggleIconButtonProps extends ButtonProps {\n  pressed?: boolean;\n}\n\n/**\n * WARNING: Temporary component!\n *\n * This component recreates \"Toggle button with icon\" pattern which is not\n * available in the design system yet.\n *\n * TODO: replace this component with the one from DuBois design system when available.\n */\nconst ToggleIconButton = React.forwardRef<HTMLButtonElement, ToggleIconButtonProps>(\n  (props: ToggleIconButtonProps, ref) => {\n    const {\n      pressed,\n      onClick,\n      icon,\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      componentId,\n      analyticsEvents,\n      type,\n      ...remainingProps\n    } = props;\n    const { theme } = useDesignSystemTheme();\n\n    const eventContext = useDesignSystemEventComponentCallbacks({\n      componentType: DesignSystemEventProviderComponentTypes.Button,\n      componentId,\n      analyticsEvents: analyticsEvents ?? [DesignSystemEventProviderAnalyticsEventTypes.OnClick],\n    });\n\n    return (\n      <button\n        onClick={(event) => {\n          eventContext.onClick(event);\n          onClick?.(event);\n        }}\n        css={{\n          cursor: 'pointer',\n          width: theme.general.heightSm,\n          height: theme.general.heightSm,\n          borderRadius: theme.legacyBorders.borderRadiusMd,\n          lineHeight: theme.typography.lineHeightBase,\n          padding: 0,\n          border: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          background: pressed ? theme.colors.actionDefaultBackgroundPress : 'transparent',\n          color: pressed ? theme.colors.actionDefaultTextPress : theme.colors.textSecondary,\n          '&:hover': {\n            background: theme.colors.actionDefaultBackgroundHover,\n            color: theme.colors.actionDefaultTextHover,\n          },\n        }}\n        ref={ref}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        {...remainingProps}\n      >\n        {icon}\n      </button>\n    );\n  },\n);\n\nexport { ToggleIconButton };\n","import { useEffect, useState } from 'react';\nimport { listArtifactsApi } from '../../../actions';\nimport { ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Fetches artifacts given a list of run UUIDs\n * @param runUuids List of run UUIDs\n * @returns Object containing artifacts keyed by run UUID\n */\nexport const useRunsArtifacts = (runUuids: string[]) => {\n  const [artifactsKeyedByRun, setArtifactsKeyedByRun] = useState<Record<string, ArtifactListFilesResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArtifacts = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      const artifactsByRun: Record<string, ArtifactListFilesResponse> = {};\n\n      try {\n        await Promise.all(\n          runUuids.map(async (runUuid) => {\n            const response = listArtifactsApi(runUuid);\n            const artifacts = (await response.payload) as ArtifactListFilesResponse;\n            artifactsByRun[runUuid] = artifacts;\n          }),\n        );\n        setArtifactsKeyedByRun(artifactsByRun);\n      } catch (err: any) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (runUuids.length > 0) {\n      fetchArtifacts();\n    } else {\n      setArtifactsKeyedByRun({});\n      setIsLoading(false);\n    }\n  }, [runUuids]);\n\n  return { artifactsKeyedByRun, isLoading, error };\n};\n","import { useState } from 'react';\nimport ShowArtifactPage from './artifact-view-components/ShowArtifactPage';\nimport { RunInfoEntity } from '../types';\nimport { useRunsArtifacts } from './experiment-page/hooks/useRunsArtifacts';\nimport { getCommonArtifacts } from './experiment-page/utils/getCommonArtifacts';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { ArtifactViewTree } from './ArtifactViewTree';\nimport { getBasename } from '../../common/utils/FileUtils';\n\nexport const CompareRunArtifactView = ({\n  runUuids,\n  runInfos,\n  colWidth,\n}: {\n  runUuids: string[];\n  runInfos: RunInfoEntity[];\n  colWidth: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [artifactPath, setArtifactPath] = useState<string | undefined>();\n\n  const { artifactsKeyedByRun } = useRunsArtifacts(runUuids);\n  const commonArtifacts = getCommonArtifacts(artifactsKeyedByRun);\n\n  if (commonArtifacts.length === 0) {\n    return (\n      <h2>\n        <FormattedMessage\n          defaultMessage=\"No common artifacts to display.\"\n          description=\"Text shown when there are no common artifacts between the runs\"\n        />\n      </h2>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100vh',\n      }}\n    >\n      <div\n        css={{\n          backgroundColor: theme.colors.backgroundPrimary,\n          color: theme.colors.textPrimary,\n          flex: '1 1 0%',\n          whiteSpace: 'nowrap',\n          border: `1px solid ${theme.colors.grey300}`,\n          overflowY: 'auto',\n        }}\n      >\n        <ArtifactViewTree\n          data={commonArtifacts.map((path: string) => ({\n            id: path,\n            active: artifactPath === path,\n            name: getBasename(path),\n          }))}\n          onToggleTreebeard={({ id }) => setArtifactPath(id)}\n        />\n      </div>\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grey300}`,\n          borderLeft: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <div css={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {runUuids.map((runUuid, index) => (\n            <div\n              key={runUuid}\n              style={{\n                width: `${colWidth}px`,\n                borderBottom: `1px solid ${theme.colors.grey300}`,\n                padding: !artifactPath ? theme.spacing.md : 0,\n                overflow: 'auto',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <ShowArtifactPage runUuid={runUuid} artifactRootUri={runInfos[index].artifactUri} path={artifactPath} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ArtifactFileInfo, ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Gets the list of artifacts that are present in all runs in the given list of runs.\n * @param artifactsKeyedByRun Object containing artifacts keyed by run UUID\n * @returns List of common artifacts\n */\nexport const getCommonArtifacts = (artifactsKeyedByRun: Record<string, ArtifactListFilesResponse>) => {\n  const runUuids = Object.keys(artifactsKeyedByRun);\n\n  if (runUuids.length === 0) return [];\n\n  let commonArtifacts = artifactsKeyedByRun[runUuids[0]]?.files\n    ?.map((file: ArtifactFileInfo) => (file.is_dir ? null : file.path))\n    ?.filter((path: string | null) => path !== null);\n\n  if (!commonArtifacts || commonArtifacts.length === 0) return [];\n\n  for (let i = 1; i < runUuids.length; i++) {\n    const currentRunArtifacts = artifactsKeyedByRun[runUuids[i]]?.files?.map((file: any) => file.path);\n    commonArtifacts = commonArtifacts?.filter((path: any) => currentRunArtifacts.includes(path));\n    if (commonArtifacts.length === 0) {\n      break;\n    }\n  }\n\n  return commonArtifacts;\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, type IntlShape } from 'react-intl';\nimport { Spacer, Switch, LegacyTabs, LegacyTooltip, Table, TableRow, TableCell } from '@databricks/design-system';\nimport { type Theme } from '@emotion/react';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { shouldDisableLegacyRunCompareCharts } from '../../common/utils/FeatureUtils';\nimport { RunInfoEntity } from '../types';\nimport { CompareRunArtifactView } from './CompareRunArtifactView';\n\nconst { TabPane } = LegacyTabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: IntlShape;\n};\n\ntype CompareRunViewState = {\n  tableWidth: number | null;\n  onlyShowParamDiff: boolean;\n  onlyShowTagDiff: boolean;\n  onlyShowMetricDiff: boolean;\n};\n\nclass CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: true,\n      onlyShowTagDiff: true,\n      onlyShowMetricDiff: true,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    if (this.state.tableWidth !== null) {\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <TableCell className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </TableCell>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    // Do not attempt to construct experiment links if they are not loaded\n    if (!experimentIds[0] || !experiments[0]) {\n      return '';\n    }\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      this.state.onlyShowParamDiff,\n      true,\n      (key: any, data: any) => key,\n      (value) => {\n        try {\n          const jsonValue = parsePythonDictString(value);\n\n          // Pretty print if parsed value is an object or array\n          if (typeof jsonValue === 'object' && jsonValue !== null) {\n            return this.renderPrettyJson(jsonValue);\n          } else {\n            return value;\n          }\n        } catch (e) {\n          return value;\n        }\n      },\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderPrettyJson(jsonValue: any) {\n    return <pre>{JSON.stringify(jsonValue, null, 2)}</pre>;\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      this.state.onlyShowMetricDiff,\n      false,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fas fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderArtifactTable(colWidth: number) {\n    return <CompareRunArtifactView runUuids={this.props.runUuids} runInfos={this.props.runInfos} colWidth={colWidth} />;\n  }\n\n  renderTagTable(colWidth: number) {\n    const dataRows = this.renderDataRows(this.props.tagLists, colWidth, this.state.onlyShowTagDiff, true);\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <Table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        {dataRows}\n      </Table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: Record<string, string>) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime, this.props.intl) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime, this.props.intl) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <TableRow key={key} className=\"compare-table-row\">\n        <TableCell\n          className=\"head-value sticky-header\"\n          css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n        >\n          {title}\n        </TableCell>\n        {data.map(([runUuid, value]) => (\n          <TableCell className=\"data-value\" key={runUuid as string} css={colWidthStyle}>\n            <LegacyTooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </LegacyTooltip>\n          </TableCell>\n        ))}\n      </TableRow>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const artifactsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Artifacts',\n      description: 'Row group title for artifacts of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    const displayChartSection = !shouldDisableLegacyRunCompareCharts();\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} spacerSize=\"xs\" />\n        {displayChartSection && (\n          <CollapsibleSection\n            title={this.props.intl.formatMessage({\n              defaultMessage: 'Visualizations',\n              description: 'Tabs title for plots on the compare runs page',\n            })}\n          >\n            <LegacyTabs>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Parallel Coordinates Plot\"\n                    // eslint-disable-next-line max-len\n                    description=\"Tab pane title for parallel coordinate plots on the compare runs page\"\n                  />\n                }\n                key=\"parallel-coordinates-plot\"\n              >\n                <ParallelCoordinatesPlotPanel runUuids={this.props.runUuids} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Scatter Plot\"\n                    description=\"Tab pane title for scatterplots on the compare runs page\"\n                  />\n                }\n                key=\"scatter-plot\"\n              >\n                <CompareRunScatter runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Box Plot\"\n                    description=\"Tab pane title for box plot on the compare runs page\"\n                  />\n                }\n                key=\"box-plot\"\n              >\n                <CompareRunBox\n                  runUuids={runUuids}\n                  runInfos={runInfos}\n                  paramLists={paramLists}\n                  metricLists={metricLists}\n                />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Contour Plot\"\n                    description=\"Tab pane title for contour plots on the compare runs page\"\n                  />\n                }\n                key=\"contour-plot\"\n              >\n                <CompareRunContour runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n            </LegacyTabs>\n          </CollapsibleSection>\n        )}\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <Table\n            className=\"table compare-table compare-run-table\"\n            ref={this.runDetailsTableRef}\n            // @ts-expect-error TS(2322): Property 'onScroll' does not exist... Remove this comment to see the full error message\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <TableRow className=\"compare-table-row\">\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                <FormattedMessage\n                  defaultMessage=\"Run ID:\"\n                  description=\"Row title for the run id on the experiment compare runs page\"\n                />\n              </TableCell>\n              {this.props.runInfos.map((r) => (\n                <TableCell className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                  <LegacyTooltip\n                    title={r.runUuid}\n                    // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                    color=\"gray\"\n                    placement=\"topLeft\"\n                    overlayStyle={{ maxWidth: '400px' }}\n                    mouseEnterDelay={1.0}\n                  >\n                    <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                  </LegacyTooltip>\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow className=\"compare-table-row\">\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                <FormattedMessage\n                  defaultMessage=\"Run Name:\"\n                  description=\"Row title for the run name on the experiment compare runs page\"\n                />\n              </TableCell>\n              {runNames.map((runName, i) => {\n                return (\n                  <TableCell className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                    <div className=\"truncate-text single-line\">\n                      <LegacyTooltip\n                        title={runName}\n                        // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                        color=\"gray\"\n                        placement=\"topLeft\"\n                        overlayStyle={{ maxWidth: '400px' }}\n                        mouseEnterDelay={1.0}\n                      >\n                        {runName}\n                      </LegacyTooltip>\n                    </div>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n            {this.renderTimeRows(colWidthStyle)}\n            {this.shouldShowExperimentNameRow() && (\n              <TableRow className=\"compare-table-row\">\n                <TableCell className=\"data-value\">\n                  <FormattedMessage\n                    defaultMessage=\"Experiment Name:\"\n                    // eslint-disable-next-line max-len\n                    description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                  />\n                </TableCell>\n                {this.renderExperimentNameRowItems()}\n              </TableRow>\n            )}\n          </Table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_570\"\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_581\"\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={artifactsLabel}>{this.renderArtifactTable(colWidth)}</CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_592\"\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: number): Record<string, string> {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <TableRow key={k} className={`${rowClass} compare-table-row`}>\n              <TableCell\n                className=\"head-value sticky-header\"\n                css={{ backgroundColor: 'var(--table-header-background-color)', ...colWidthStyle }}\n              >\n                {headerMap(k, values)}\n              </TableCell>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <TableCell className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </LegacyTooltip>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    // Skip processing data if run info is not available yet\n    if (!runInfo) {\n      return;\n    }\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n/**\n * Parse a Python dictionary in string format into a JSON object.\n * @param value The Python dictionary string to parse\n * @returns The parsed JSON object, or null if parsing fails\n */\nconst parsePythonDictString = (value: string) => {\n  try {\n    const jsonString = value.replace(/'/g, '\"');\n    return JSON.parse(jsonString);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport { DangerIcon, Empty, Spinner } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  urlDecodeError?: boolean;\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  state: {\n    requestError?: Error | ErrorWrapper;\n  } = {\n    requestError: undefined,\n  };\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props\n        .dispatch(getExperimentApi(experimentId, experimentRequestId))\n        .catch((requestError: Error | ErrorWrapper) => this.setState({ requestError }));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n\n      this.props.dispatch(getRunApi(runUuid, requestId)).catch((requestError: Error | ErrorWrapper) => {\n        this.setState({ requestError });\n      });\n    });\n  }\n\n  render() {\n    // If the error is set, throw it to be caught by the error boundary\n    if (this.state.requestError) {\n      const { requestError } = this.state;\n      const errorToThrow = requestError instanceof Error ? requestError : new Error(requestError.getMessageField?.());\n      throw errorToThrow;\n    }\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          // We suppress throwing error by RequestStateWrapper since we handle it using component and error boundary\n          suppressErrorThrow\n          requestIds={this.requestIds}\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\n/**\n * When integrated via IFrame in Kubeflow it re-encodes the URI (sometimes multiple times), leading to an unparsable JSON.\n * This function decodes the URI until it is parsable.\n */\nconst decodeURI = (uri: string): string => {\n  const decodedURI = decodeURIComponent(uri);\n  if (uri !== decodedURI) {\n    return decodeURI(decodedURI);\n  }\n  return decodedURI;\n};\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  try {\n    const { location } = ownProps;\n    const locationSearchDecoded = decodeURI(location.search);\n    const searchValues = qs.parse(locationSearchDecoded);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const experimentIds = JSON.parse(searchValues['experiments']);\n    return { experimentIds, runUuids };\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw new SyntaxError(`Error while parsing URL: ${e.message}`);\n    }\n\n    throw e;\n  }\n};\n\nconst CompareRunPageErrorFallback = ({ error }: { error: Error }) => (\n  <div css={{ height: '100%', alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n    <Empty\n      title={\n        <FormattedMessage\n          defaultMessage=\"Error while loading compare runs page\"\n          description=\"Title of the error state on the run compare page\"\n        />\n      }\n      description={error.message}\n      image={<DangerIcon />}\n    />\n  </div>\n);\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(\n  ErrorUtils.mlflowServices.RUN_TRACKING,\n  CompareRunPage,\n  undefined,\n  CompareRunPageErrorFallback,\n);\n","import { ImageIcon, Spinner } from '@databricks/design-system';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { getArtifactLocationUrl } from '@mlflow/mlflow/src/common/utils/ArtifactUtils';\nimport { ImageEntity } from '@mlflow/mlflow/src/experiment-tracking/types';\nimport { useState, useEffect } from 'react';\nimport { Typography } from '@databricks/design-system';\nimport { ImagePreviewGroup, Image } from '../../../../../shared/building_blocks/Image';\n\nconst MAX_IMAGE_SIZE = 225;\nconst MIN_IMAGE_SIZE = 120;\nexport const IMAGE_GAP_SIZE = 10;\n\nexport const getImageSize = (numImages: number, width: number) => {\n  // Scale image size based on number of images\n  const maxImagesPerRow = Math.floor(width / MIN_IMAGE_SIZE);\n  if (numImages < maxImagesPerRow) {\n    return Math.min(width / numImages - IMAGE_GAP_SIZE, MAX_IMAGE_SIZE);\n  }\n  return width / maxImagesPerRow - IMAGE_GAP_SIZE;\n};\n\ntype ImagePlotProps = {\n  imageUrl: string;\n  compressedImageUrl: string;\n  imageSize?: number;\n  maxImageSize?: number;\n};\n\nexport const ImagePlot = ({ imageUrl, compressedImageUrl, imageSize, maxImageSize }: ImagePlotProps) => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const [imageLoading, setImageLoading] = useState(true);\n\n  useEffect(() => {\n    // Load the image in the memory (should reuse the same request) in order to get the loading state\n    setImageLoading(true);\n    const img = new window.Image();\n    img.onload = () => setImageLoading(false);\n    img.onerror = () => setImageLoading(false);\n    img.src = compressedImageUrl;\n    return () => {\n      img.src = '';\n    };\n  }, [compressedImageUrl]);\n\n  return (\n    <div css={{ width: imageSize, height: imageSize || '100%' }}>\n      <div css={{ height: imageSize || '100%' }}>\n        {compressedImageUrl === undefined || imageLoading ? (\n          <div\n            css={{\n              height: '100%',\n              backgroundColor: theme.colors.backgroundSecondary,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Spinner />\n          </div>\n        ) : (\n          <div\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: imageSize || '100%',\n              height: imageSize || '100%',\n              maxWidth: maxImageSize,\n              maxHeight: maxImageSize,\n              backgroundColor: theme.colors.backgroundSecondary,\n              '& .ant-image': {\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n              },\n            }}\n          >\n            <ImagePreviewGroup visible={previewVisible} onVisibleChange={setPreviewVisible}>\n              <Image\n                src={compressedImageUrl}\n                preview={{ src: imageUrl }}\n                style={{ maxWidth: maxImageSize || '100%', maxHeight: maxImageSize || '100%' }}\n              />\n            </ImagePreviewGroup>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const ImagePlotWithHistory = ({\n  metadataByStep,\n  imageSize,\n  step,\n  runUuid,\n}: {\n  metadataByStep: Record<number, ImageEntity>;\n  imageSize?: number;\n  step: number;\n  runUuid: string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  if (metadataByStep[step] === undefined) {\n    return (\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          width: imageSize,\n          height: imageSize,\n          backgroundColor: theme.colors.backgroundSecondary,\n          padding: theme.spacing.md,\n        }}\n      >\n        <ImageIcon />\n        <FormattedMessage\n          defaultMessage=\"No image logged at this step\"\n          description=\"Experiment tracking > runs charts > charts > image plot with history > no image text\"\n        />\n      </div>\n    );\n  }\n  return (\n    <ImagePlot\n      imageUrl={getArtifactLocationUrl(metadataByStep[step].filepath, runUuid)}\n      compressedImageUrl={getArtifactLocationUrl(metadataByStep[step].compressed_filepath, runUuid)}\n      imageSize={imageSize}\n    />\n  );\n};\n\nexport const EmptyImageGridPlot = () => {\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        fontSize: 16,\n      }}\n    >\n      <Typography.Title css={{ marginTop: 16 }} color=\"secondary\" level={3}>\n        Compare logged images\n      </Typography.Title>\n      <Typography.Text css={{ marginBottom: 16 }} color=\"secondary\">\n        Use the image grid chart to compare logged images across runs.\n      </Typography.Text>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n","import {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  CloseIcon,\n  DesignSystemContext,\n  RedoIcon,\n  UndoIcon,\n  ZoomInIcon,\n  ZoomOutIcon,\n} from '@databricks/design-system';\nimport { useContext } from 'react';\nimport RcImage from 'rc-image';\nimport './Image.css';\n\nconst icons = {\n  rotateLeft: <UndoIcon />,\n  rotateRight: <RedoIcon />,\n  zoomIn: <ZoomInIcon />,\n  zoomOut: <ZoomOutIcon />,\n  close: <CloseIcon />,\n  left: <ArrowLeftIcon />,\n  right: <ArrowRightIcon />,\n};\n\nexport const ImagePreviewGroup = ({\n  children,\n  visible,\n  onVisibleChange,\n}: {\n  children: React.ReactNode;\n  visible: boolean;\n  onVisibleChange: (v: boolean) => void;\n}) => {\n  const { getPopupContainer } = useContext(DesignSystemContext);\n\n  return (\n    <RcImage.PreviewGroup\n      icons={icons}\n      preview={{\n        visible: visible,\n        getContainer: getPopupContainer,\n        onVisibleChange: (v) => onVisibleChange(v),\n      }}\n    >\n      {children}\n    </RcImage.PreviewGroup>\n  );\n};\n\nexport { RcImage as Image };\n","/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport python from 'react-syntax-highlighter/dist/cjs/languages/prism/python';\nimport json from 'react-syntax-highlighter/dist/cjs/languages/prism/json';\n\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('json', json);\n\nimport duotoneDarkStyle from './theme/databricks-duotone-dark';\nimport lightStyle from './theme/databricks-light';\nimport { CSSProperties, ReactNode } from 'react';\nimport { pick } from 'lodash';\n\nexport type CodeSnippetTheme = 'duotoneDark' | 'light';\n\nexport const buttonBackgroundColorDark = 'rgba(140, 203, 255, 0)';\nexport const buttonColorDark = 'rgba(255, 255, 255, 0.84)';\nexport const buttonHoverColorDark = '#8ccbffcc';\nexport const buttonHoverBackgroundColorDark = 'rgba(140, 203, 255, 0.08)';\nexport const duboisAlertBackgroundColor = '#fff0f0';\nexport const snippetPadding = '24px';\n\nconst themesStyles: Record<CodeSnippetTheme, any> = {\n  light: lightStyle,\n  duotoneDark: duotoneDarkStyle,\n};\n\nexport type CodeSnippetLanguage = 'python' | 'json';\n\nexport interface CodeSnippetProps {\n  /**\n   * The code string\n   */\n  children: string;\n  /**\n   * The actions that are displayed on the right top corner of the component\n   *  see `./actions` for built-in actions\n   */\n  actions?: NonNullable<ReactNode> | NonNullable<ReactNode>[];\n  /**\n   * The theme, default theme is `light`\n   */\n  theme?: CodeSnippetTheme;\n  /**\n   * Language of the code (`children`)\n   */\n  language: CodeSnippetLanguage;\n  /**\n   * Custom styles (passed to the internal `<pre>`)\n   */\n  style?: CSSProperties;\n  /**\n   * Whether to show line numbers on the left or not\n   */\n  showLineNumbers?: boolean;\n  /**\n   * Custom styles for line numbers\n   */\n  lineNumberStyle?: CSSProperties;\n  /**\n   * Whether or not to wrap long lines\n   */\n  wrapLongLines?: boolean;\n}\n\n/**\n * `CodeSnippet` is used for highlighting code, use this instead of\n */\nexport function CodeSnippet({\n  theme = 'light',\n  language,\n  actions,\n  style,\n  children,\n  showLineNumbers,\n  lineNumberStyle,\n  wrapLongLines,\n}: CodeSnippetProps) {\n  const customStyle = {\n    border: 'none',\n    borderRadius: 0,\n    margin: 0,\n    padding: snippetPadding,\n    ...style,\n  };\n\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={showLineNumbers}\n      lineNumberStyle={lineNumberStyle}\n      language={language}\n      style={themesStyles[theme]}\n      customStyle={customStyle}\n      codeTagProps={{\n        style: pick(style, 'backgroundColor'),\n      }}\n      wrapLongLines={wrapLongLines}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n"],"names":["getAccordionStyles","_ref","theme","getPrefixedClassName","clsPrefix","classItem","classHeader","classContentBox","fontSize","paddingLeft","paddingTop","paddingBottom","display","alignItems","fontWeight","lineHeight","typography","lineHeightLg","padding","spacing","xs","md","CollapsibleSection","props","title","forceOpen","showServerError","defaultCollapsed","onChange","className","componentId","activeKeyProp","activeKey","defaultActiveKey","useDesignSystemTheme","formatMessage","useIntl","getExpandIcon","useCallback","_ref2","isActive","_jsx","css","importantify","width","general","heightBase","transform","undefined","children","ChevronRightIcon","_css","svg","height","id","defaultMessage","Accordion","dangerouslyAppendEmotionCSS","dangerouslySetAntdProps","expandIconPosition","expandIcon","Panel","header","SectionErrorBoundary","JsonPreview","json","wrapperStyle","overlayStyle","codeSnippetStyle","formattedJson","isJsonContent","useFormattedJson","style","position","maxHeight","overflow","_jsxs","_Fragment","CodeSnippet","language","overflowX","bottom","right","left","background","React","parsed","JSON","parse","isJson","isObject","Date","stringify","e","_ref3","name","styles","FormattedJsonDisplay","wrapLongLines","ToggleIconButton","ref","pressed","onClick","icon","onBlur","onFocus","onMouseEnter","onMouseLeave","analyticsEvents","type","remainingProps","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","Button","DesignSystemEventProviderAnalyticsEventTypes","OnClick","event","cursor","heightSm","borderRadius","legacyBorders","borderRadiusMd","lineHeightBase","border","justifyContent","colors","actionDefaultBackgroundPress","color","actionDefaultTextPress","textSecondary","actionDefaultBackgroundHover","actionDefaultTextHover","useRunsArtifacts","runUuids","artifactsKeyedByRun","setArtifactsKeyedByRun","useState","isLoading","setIsLoading","error","setError","useEffect","length","async","artifactsByRun","Promise","all","map","response","listArtifactsApi","runUuid","artifacts","payload","err","fetchArtifacts","_ref4","CompareRunArtifactView","runInfos","colWidth","artifactPath","setArtifactPath","commonArtifacts","_artifactsKeyedByRun$","_artifactsKeyedByRun$2","_artifactsKeyedByRun$3","Object","keys","files","file","is_dir","path","filter","i","_artifactsKeyedByRun$4","_artifactsKeyedByRun$5","_commonArtifacts","currentRunArtifacts","includes","getCommonArtifacts","FormattedMessage","backgroundColor","backgroundPrimary","textPrimary","flex","whiteSpace","grey300","overflowY","ArtifactViewTree","data","active","getBasename","onToggleTreebeard","borderLeft","flexDirection","index","borderBottom","ShowArtifactPage","artifactRootUri","artifactUri","TabPane","LegacyTabs","_ref5","CompareRunView","Component","constructor","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","table","current","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","block","target","scrollLeft","componentDidMount","pageTitle","intl","runs","Utils","updatePageTitle","window","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","experimentId","basename","TableCell","Link","to","Routes","getExperimentPageRoute","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","key","value","jsonValue","parsePythonDictString","renderPrettyJson","Table","onScroll","renderMetricTable","metricLists","getMetricPageRoute","info","uuid","idx","formatMetric","renderArtifactTable","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","_ref6","_ref7","_ref8","_ref9","TableRow","_ref10","LegacyTooltip","placement","maxWidth","mouseEnterDelay","render","runNames","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","artifactsLabel","tagsLabel","diffOnlyLabel","displayChartSection","shouldDisableLegacyRunCompareCharts","PageHeader","spacerSize","tab","ParallelCoordinatesPlotPanel","CompareRunScatter","runDisplayNames","CompareRunBox","CompareRunContour","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","Switch","label","join","checked","Spacer","size","minWidth","list","onlyShowDiff","highlightDiff","arguments","headerMap","formatter","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","jsonString","replace","connect","mapStateToProps","ownProps","compareExperiments","getExperiment","getRunInfo","push","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","_ref11","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","requestError","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","catch","requestId","getRunApi","_requestError$getMess","Error","getMessageField","call","PageContainer","RequestStateWrapper","suppressErrorThrow","decodeURI","uri","decodedURI","decodeURIComponent","CompareRunPage","withRouterNext","location","locationSearchDecoded","search","searchValues","qs","SyntaxError","message","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING","Empty","description","image","DangerIcon","IMAGE_GAP_SIZE","getImageSize","numImages","maxImagesPerRow","floor","min","ImagePlot","imageUrl","compressedImageUrl","imageSize","maxImageSize","previewVisible","setPreviewVisible","imageLoading","setImageLoading","img","Image","onload","onerror","src","backgroundSecondary","Spinner","ImagePreviewGroup","visible","onVisibleChange","preview","ImagePlotWithHistory","metadataByStep","step","textAlign","ImageIcon","getArtifactLocationUrl","filepath","compressed_filepath","EmptyImageGridPlot","Typography","Title","level","Text","CopyButton","copyText","showLabel","buttonProps","showTooltip","setShowTooltip","handleClick","navigator","clipboard","writeText","setTimeout","handleMouseLeave","icons","rotateLeft","UndoIcon","rotateRight","RedoIcon","zoomIn","ZoomInIcon","zoomOut","ZoomOutIcon","close","CloseIcon","ArrowLeftIcon","ArrowRightIcon","getPopupContainer","useContext","DesignSystemContext","RcImage","PreviewGroup","getContainer","v","fontFamily","direction","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","margin","textShadow","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","italic","fontStyle","important","bold","Outline","OutlineOffset","borderRightColor","wordWrap","attribute","builtin","char","class","constant","hexcode","symbol","SyntaxHighlighter","registerLanguage","python","snippetPadding","themesStyles","light","lightStyle","duotoneDark","duotoneDarkStyle","actions","showLineNumbers","lineNumberStyle","customStyle","codeTagProps","pick"],"sourceRoot":""}