{"version":3,"file":"static/js/965.2b846b6f.chunk.js","mappings":"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","sources":["common/components/KeyValueTagFullViewModal.tsx","common/components/KeyValueTag.tsx","common/components/TagSelectDropdown.tsx","common/hooks/useEditKeyValueTagsModal.tsx","shared/web-shared/errors/ErrorLogType.ts","shared/web-shared/errors/ErrorName.ts","shared/web-shared/errors/PredefinedErrors.tsx","experiment-tracking/pages/prompts/api.ts","experiment-tracking/pages/prompts/utils.ts","shared/building_blocks/CopyButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Typography, CopyIcon, useDesignSystemTheme } from '@databricks/design-system';\nconst { Paragraph } = Typography;\nimport { CopyButton } from '@mlflow/mlflow/src/shared/building_blocks/CopyButton';\n\nexport interface KeyValueTagFullViewModalProps {\n  tagKey: string;\n  tagValue: string;\n  setIsKeyValueTagFullViewModalVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  isKeyValueTagFullViewModalVisible: boolean;\n}\n\nexport const KeyValueTagFullViewModal = React.memo((props: KeyValueTagFullViewModalProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <Modal\n      componentId=\"codegen_mlflow_app_src_common_components_keyvaluetagfullviewmodal.tsx_17\"\n      title={'Tag: ' + props.tagKey}\n      visible={props.isKeyValueTagFullViewModalVisible}\n      onCancel={() => props.setIsKeyValueTagFullViewModalVisible(false)}\n    >\n      <div css={{ display: 'flex' }}>\n        <Paragraph css={{ flexGrow: 1 }}>\n          <pre\n            css={{\n              backgroundColor: theme.colors.backgroundPrimary,\n              marginTop: theme.spacing.sm,\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-all',\n            }}\n          >\n            {props.tagValue}\n          </pre>\n        </Paragraph>\n        <div\n          css={{\n            marginTop: theme.spacing.sm,\n          }}\n        >\n          <CopyButton copyText={props.tagValue} showLabel={false} icon={<CopyIcon />} aria-label=\"Copy\" />\n        </div>\n      </div>\n    </Modal>\n  );\n});\n","import { Tag, LegacyTooltip, Typography } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { KeyValueTagFullViewModal } from './KeyValueTagFullViewModal';\nimport { Interpolation, Theme } from '@emotion/react';\n\n/**\n * An arbitrary number that is used to determine if a tag is too\n * long and should be truncated. We want to avoid short keys or values\n * in a long tag to be truncated\n * */\nconst TRUNCATE_ON_CHARS_LENGTH = 30;\n\nfunction getTruncatedStyles(shouldTruncate = true): Interpolation<Theme> {\n  return shouldTruncate\n    ? {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        textWrap: 'nowrap',\n        whiteSpace: 'nowrap' as const,\n      }\n    : { whiteSpace: 'nowrap' as const };\n}\n\n/**\n * A <Tag /> wrapper used for displaying key-value entity\n */\nexport const KeyValueTag = ({\n  isClosable = false,\n  onClose,\n  tag,\n  enableFullViewModal = false,\n  charLimit = TRUNCATE_ON_CHARS_LENGTH,\n  maxWidth = 300,\n  className,\n}: {\n  isClosable?: boolean;\n  onClose?: () => void;\n  tag: KeyValueEntity;\n  enableFullViewModal?: boolean;\n  charLimit?: number;\n  maxWidth?: number;\n  className?: string;\n}) => {\n  const intl = useIntl();\n\n  const [isKeyValueTagFullViewModalVisible, setIsKeyValueTagFullViewModalVisible] = useState(false);\n\n  const { shouldTruncateKey, shouldTruncateValue } = getKeyAndValueComplexTruncation(tag, charLimit);\n  const allowFullViewModal = enableFullViewModal && (shouldTruncateKey || shouldTruncateValue);\n\n  const fullViewModalLabel = intl.formatMessage({\n    defaultMessage: 'Click to see more',\n    description: 'Run page > Overview > Tags cell > Tag',\n  });\n\n  return (\n    <div>\n      <Tag\n        componentId=\"codegen_mlflow_app_src_common_components_keyvaluetag.tsx_60\"\n        closable={isClosable}\n        onClose={onClose}\n        title={tag.key}\n        className={className}\n      >\n        <LegacyTooltip title={allowFullViewModal ? fullViewModalLabel : ''}>\n          <span\n            css={{ maxWidth, display: 'inline-flex' }}\n            onClick={() => (allowFullViewModal ? setIsKeyValueTagFullViewModalVisible(true) : undefined)}\n          >\n            <Typography.Text bold title={tag.key} css={getTruncatedStyles(shouldTruncateKey)}>\n              {tag.key}\n            </Typography.Text>\n            {tag.value && (\n              <Typography.Text title={tag.value} css={getTruncatedStyles(shouldTruncateValue)}>\n                : {tag.value}\n              </Typography.Text>\n            )}\n          </span>\n        </LegacyTooltip>\n      </Tag>\n      <div>\n        {isKeyValueTagFullViewModalVisible && (\n          <KeyValueTagFullViewModal\n            tagKey={tag.key}\n            tagValue={tag.value}\n            isKeyValueTagFullViewModalVisible={isKeyValueTagFullViewModalVisible}\n            setIsKeyValueTagFullViewModalVisible={setIsKeyValueTagFullViewModalVisible}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport function getKeyAndValueComplexTruncation(\n  tag: KeyValueEntity,\n  charLimit = TRUNCATE_ON_CHARS_LENGTH,\n): { shouldTruncateKey: boolean; shouldTruncateValue: boolean } {\n  const { key, value } = tag;\n  const fullLength = key.length + value.length;\n  const isKeyLonger = key.length > value.length;\n  const shorterLength = isKeyLonger ? value.length : key.length;\n\n  // No need to truncate if tag is short enough\n  if (fullLength <= charLimit) return { shouldTruncateKey: false, shouldTruncateValue: false };\n  // If the shorter string is too long, truncate both key and value.\n  if (shorterLength > charLimit / 2) return { shouldTruncateKey: true, shouldTruncateValue: true };\n\n  // Otherwise truncate the longer string\n  return {\n    shouldTruncateKey: isKeyLonger,\n    shouldTruncateValue: !isKeyLonger,\n  };\n}\n","import { sortedIndexOf } from 'lodash';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { Control, useController } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\n\nimport { PlusIcon, LegacySelect, LegacyTooltip, useDesignSystemTheme } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\n\n/**\n * Will show an extra row at the bottom of the dropdown menu to create a new tag when\n * The user has typed something in the search input\n * and either\n * 1. The search input is not an exact match for an existing tag name\n * 2. There are no tags available based on search input\n */\n\nfunction DropdownMenu(menu: React.ReactElement, allAvailableTags: string[]) {\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n  const searchValue = menu.props.searchValue.toLowerCase();\n\n  const resolvedMenu = useMemo(() => {\n    if (!searchValue) return menu;\n\n    const doesTagExists = sortedIndexOf(allAvailableTags, searchValue) >= 0;\n    if (doesTagExists) return menu;\n\n    const isValidTagKey = /^[^,.:/=\\-\\s]+$/.test(searchValue);\n\n    // Overriding the menu to add a new option at the top\n    return React.cloneElement(menu, {\n      flattenOptions: [\n        {\n          data: {\n            value: searchValue,\n            disabled: !isValidTagKey,\n            style: {\n              color: isValidTagKey ? theme.colors.actionTertiaryTextDefault : theme.colors.actionDisabledText,\n            },\n            children: (\n              <LegacyTooltip\n                title={\n                  isValidTagKey\n                    ? undefined\n                    : intl.formatMessage({\n                        defaultMessage: ', . : / - = and blank spaces are not allowed',\n                        description:\n                          'Key-value tag editor modal > Tag dropdown Manage Modal > Invalid characters error',\n                      })\n                }\n                placement=\"right\"\n              >\n                <span css={{ display: 'block' }}>\n                  <PlusIcon css={{ marginRight: theme.spacing.sm }} />\n                  {intl.formatMessage(\n                    {\n                      defaultMessage: 'Add tag \"{tagKey}\"',\n                      description: 'Key-value tag editor modal > Tag dropdown Manage Modal > Add new tag button',\n                    },\n                    {\n                      tagKey: searchValue,\n                    },\n                  )}\n                </span>\n              </LegacyTooltip>\n            ),\n          },\n          key: searchValue,\n          groupOption: false,\n        },\n        ...menu.props.flattenOptions,\n      ],\n    });\n  }, [allAvailableTags, menu, searchValue, intl, theme]);\n\n  return resolvedMenu;\n}\n\nfunction getDropdownMenu(allAvailableTags: string[]) {\n  return (menu: React.ReactElement) => DropdownMenu(menu, allAvailableTags);\n}\n\n/**\n * Used in tag edit feature, allows selecting existing / adding new tag value\n */\nexport function TagKeySelectDropdown({\n  allAvailableTags,\n  control,\n  onKeyChangeCallback,\n}: {\n  allAvailableTags: string[];\n  control: Control<KeyValueEntity>;\n  onKeyChangeCallback?: (key?: string) => void;\n}) {\n  const intl = useIntl();\n  const [isOpen, setIsOpen] = useState(false);\n  const selectRef = useRef<{ blur: () => void; focus: () => void }>(null);\n\n  const { field, fieldState } = useController({\n    control: control,\n    name: 'key',\n    rules: {\n      required: {\n        message: intl.formatMessage({\n          defaultMessage: 'A tag key is required',\n          description: 'Key-value tag editor modal > Tag dropdown > Tag key required error message',\n        }),\n        value: true,\n      },\n    },\n  });\n\n  const handleDropdownVisibleChange = (visible: boolean) => {\n    setIsOpen(visible);\n  };\n\n  const handleClear = () => {\n    field.onChange(undefined);\n    onKeyChangeCallback?.(undefined);\n  };\n\n  const handleSelect = (key: string) => {\n    field.onChange(key);\n    onKeyChangeCallback?.(key);\n  };\n\n  return (\n    <LegacySelect\n      allowClear\n      ref={selectRef}\n      dangerouslySetAntdProps={{\n        showSearch: true,\n        dropdownRender: getDropdownMenu(allAvailableTags),\n      }}\n      css={{ width: '100%' }}\n      placeholder={intl.formatMessage({\n        defaultMessage: 'Type a key',\n        description: 'Key-value tag editor modal > Tag dropdown > Tag input placeholder',\n      })}\n      value={field.value}\n      defaultValue={field.value}\n      open={isOpen}\n      onDropdownVisibleChange={handleDropdownVisibleChange}\n      filterOption={(input, option) => option?.value.toLowerCase().includes(input.toLowerCase())}\n      onSelect={handleSelect}\n      onClear={handleClear}\n      validationState={fieldState.error ? 'error' : undefined}\n    >\n      {allAvailableTags.map((tag) => (\n        <LegacySelect.Option value={tag} key={tag}>\n          {tag}\n        </LegacySelect.Option>\n      ))}\n    </LegacySelect>\n  );\n}\n","import { isEqual, sortBy } from 'lodash';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport { truncate } from 'lodash';\n\nimport {\n  Button,\n  FormUI,\n  Modal,\n  PlusIcon,\n  Popover,\n  RHFControlledComponents,\n  RestoreAntDDefaultClsPrefix,\n  LegacyTooltip,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport { Typography } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { TagKeySelectDropdown } from '../components/TagSelectDropdown';\nimport { KeyValueTag } from '../components/KeyValueTag';\nimport { ErrorWrapper } from '../utils/ErrorWrapper';\n\nfunction getTagsMap(tags: KeyValueEntity[]) {\n  return new Map(tags.map((tag) => [tag.key, tag]));\n}\n\n/**\n * Provides methods to initialize and display modal used to add and remove tags from any compatible entity\n */\nexport const useEditKeyValueTagsModal = <T extends { tags?: KeyValueEntity[] }>({\n  onSuccess,\n  saveTagsHandler,\n  allAvailableTags,\n  valueRequired = false,\n  title,\n}: {\n  onSuccess?: () => void;\n  saveTagsHandler: (editedEntity: T, existingTags: KeyValueEntity[], newTags: KeyValueEntity[]) => Promise<any>;\n  allAvailableTags?: string[];\n  valueRequired?: boolean;\n  title?: React.ReactNode;\n}) => {\n  const editedEntityRef = useRef<T>();\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const { theme } = useDesignSystemTheme();\n\n  const [initialTags, setInitialTags] = useState<Map<string, KeyValueEntity>>(new Map());\n  const [finalTags, setFinalTags] = useState<Map<string, KeyValueEntity>>(new Map());\n\n  const [showModal, setShowModal] = useState(false);\n\n  const form = useForm<KeyValueEntity>({\n    defaultValues: {\n      key: undefined,\n      value: '',\n    },\n  });\n\n  const hideModal = () => setShowModal(false);\n\n  /**\n   * Function used to invoke the modal and start editing tags of the particular model version\n   */\n  const showEditTagsModal = useCallback(\n    (editedEntity: T) => {\n      editedEntityRef.current = editedEntity;\n      setInitialTags(getTagsMap(editedEntity.tags || []));\n      setFinalTags(getTagsMap(editedEntity.tags || []));\n      form.reset();\n\n      setShowModal(true);\n    },\n    [form],\n  );\n\n  const saveTags = async () => {\n    if (!editedEntityRef.current) {\n      return;\n    }\n    setErrorMessage('');\n    setIsLoading(true);\n    saveTagsHandler(editedEntityRef.current, Array.from(initialTags.values()), Array.from(finalTags.values()))\n      .then(() => {\n        hideModal();\n        onSuccess?.();\n        setIsLoading(false);\n      })\n      .catch((e: ErrorWrapper | Error) => {\n        setIsLoading(false);\n        setErrorMessage(e instanceof ErrorWrapper ? e.getUserVisibleError()?.message : e.message);\n      });\n  };\n\n  const intl = useIntl();\n  const formValues = form.watch();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hasNewValues = useMemo(\n    () => !isEqual(sortBy(Array.from(initialTags.values()), 'key'), sortBy(Array.from(finalTags.values()), 'key')),\n    [initialTags, finalTags],\n  );\n  const isDirty = formValues.key || formValues.value;\n  const showPopoverMessage = hasNewValues && isDirty;\n\n  const onKeyChangeCallback = (key: string | undefined) => {\n    const tag = key ? finalTags.get(key) : undefined;\n    /**\n     * If a tag value exists for provided key, set the value to the existing tag value\n     */\n    form.setValue('value', tag?.value ?? '');\n  };\n\n  const handleTagDelete = ({ key }: KeyValueEntity) => {\n    setFinalTags((currentFinalTags) => {\n      currentFinalTags.delete(key);\n      return new Map(currentFinalTags);\n    });\n  };\n\n  const onSubmit = () => {\n    // Do not accept form if no value provided while it's required\n    if (valueRequired && !formValues.value.trim()) {\n      return;\n    }\n\n    // Add new tag to existing tags leaving only one tag per key value\n    const newEntries = new Map(finalTags);\n    newEntries.set(formValues.key, formValues);\n\n    setFinalTags(newEntries);\n    form.reset();\n  };\n\n  const EditTagsModal = (\n    <Modal\n      componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_135\"\n      destroyOnClose\n      visible={showModal}\n      title={\n        title ?? (\n          <FormattedMessage\n            defaultMessage=\"Add/Edit tags\"\n            description=\"Key-value tag editor modal > Title of the update tags modal\"\n          />\n        )\n      }\n      onCancel={hideModal}\n      footer={\n        <RestoreAntDDefaultClsPrefix>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_147\"\n            dangerouslyUseFocusPseudoClass\n            onClick={hideModal}\n            /**\n             * Hack: The footer will remove the margin to the save tags button\n             * if the button if wrapped on another component.\n             */\n            css={{ marginRight: !hasNewValues ? theme.spacing.sm : 0 }}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Cancel',\n              description: 'Key-value tag editor modal > Manage Tag cancel button',\n            })}\n          </Button>\n          {showPopoverMessage ? (\n            <UnsavedTagPopoverTrigger formValues={formValues} isLoading={isLoading} onSaveTask={saveTags} />\n          ) : (\n            <LegacyTooltip\n              title={\n                !hasNewValues\n                  ? intl.formatMessage({\n                      defaultMessage: 'Please add or remove one or more tags before saving',\n                      description: 'Key-value tag editor modal > Tag disabled message',\n                    })\n                  : undefined\n              }\n            >\n              <Button\n                componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_174\"\n                dangerouslyUseFocusPseudoClass\n                disabled={!hasNewValues}\n                loading={isLoading}\n                type=\"primary\"\n                onClick={saveTags}\n              >\n                {intl.formatMessage({\n                  defaultMessage: 'Save tags',\n                  description: 'Key-value tag editor modal > Manage Tag save button',\n                })}\n              </Button>\n            </LegacyTooltip>\n          )}\n        </RestoreAntDDefaultClsPrefix>\n      }\n    >\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        css={{ display: 'flex', alignItems: 'flex-end', gap: theme.spacing.md }}\n      >\n        <div css={{ minWidth: 0, display: 'flex', gap: theme.spacing.md, flex: 1 }}>\n          <div css={{ flex: 1 }}>\n            <FormUI.Label htmlFor=\"key\">\n              {intl.formatMessage({\n                defaultMessage: 'Key',\n                description: 'Key-value tag editor modal > Key input label',\n              })}\n            </FormUI.Label>\n            <TagKeySelectDropdown\n              allAvailableTags={allAvailableTags || []}\n              control={form.control}\n              onKeyChangeCallback={onKeyChangeCallback}\n            />\n          </div>\n          <div css={{ flex: 1 }}>\n            <FormUI.Label htmlFor=\"value\">\n              {valueRequired\n                ? intl.formatMessage({\n                    defaultMessage: 'Value',\n                    description: 'Key-value tag editor modal > Value input label (required)',\n                  })\n                : intl.formatMessage({\n                    defaultMessage: 'Value (optional)',\n                    description: 'Key-value tag editor modal > Value input label',\n                  })}\n            </FormUI.Label>\n            <RHFControlledComponents.Input\n              componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_223\"\n              name=\"value\"\n              control={form.control}\n              aria-label={\n                valueRequired\n                  ? intl.formatMessage({\n                      defaultMessage: 'Value',\n                      description: 'Key-value tag editor modal > Value input label (required)',\n                    })\n                  : intl.formatMessage({\n                      defaultMessage: 'Value (optional)',\n                      description: 'Key-value tag editor modal > Value input label',\n                    })\n              }\n              placeholder={intl.formatMessage({\n                defaultMessage: 'Type a value',\n                description: 'Key-value tag editor modal > Value input placeholder',\n              })}\n            />\n          </div>\n        </div>\n        <LegacyTooltip\n          title={intl.formatMessage({\n            defaultMessage: 'Add tag',\n            description: 'Key-value tag editor modal > Add tag button',\n          })}\n        >\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_248\"\n            htmlType=\"submit\"\n            aria-label={intl.formatMessage({\n              defaultMessage: 'Add tag',\n              description: 'Key-value tag editor modal > Add tag button',\n            })}\n          >\n            <PlusIcon />\n          </Button>\n        </LegacyTooltip>\n      </form>\n      {errorMessage && <FormUI.Message type=\"error\" message={errorMessage} />}\n      <div\n        css={{\n          display: 'flex',\n          rowGap: theme.spacing.xs,\n          flexWrap: 'wrap',\n          marginTop: theme.spacing.sm,\n        }}\n      >\n        {Array.from(finalTags.values()).map((tag) => (\n          <KeyValueTag isClosable tag={tag} onClose={() => handleTagDelete(tag)} key={tag.key} />\n        ))}\n      </div>\n    </Modal>\n  );\n\n  return { EditTagsModal, showEditTagsModal, isLoading };\n};\n\nfunction UnsavedTagPopoverTrigger({\n  isLoading,\n  formValues,\n  onSaveTask,\n}: {\n  isLoading: boolean;\n  formValues: any;\n  onSaveTask: () => void;\n}) {\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n\n  const tagKeyDisplay = `${truncate(formValues.key, { length: 20 }) || '_'}`;\n  const tagValueDisplay = formValues.value ? `:${truncate(formValues.value, { length: 20 })}` : '';\n  const fullTagDisplay = `${tagKeyDisplay}${tagValueDisplay}`;\n\n  const shownText = intl.formatMessage(\n    {\n      defaultMessage: 'Are you sure you want to save and close without adding \"{tag}\"',\n      description: 'Key-value tag editor modal > Unsaved tag message',\n    },\n    {\n      tag: fullTagDisplay,\n    },\n  );\n  return (\n    <Popover.Root componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_309\">\n      <Popover.Trigger asChild>\n        <Button\n          componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_306\"\n          dangerouslyUseFocusPseudoClass\n          loading={isLoading}\n          type=\"primary\"\n        >\n          {intl.formatMessage({\n            defaultMessage: 'Save tags',\n            description: 'Key-value tag editor modal > Manage Tag save button',\n          })}\n        </Button>\n      </Popover.Trigger>\n      <Popover.Content align=\"end\" aria-label={shownText}>\n        <Typography.Paragraph css={{ maxWidth: 400 }}>{shownText}</Typography.Paragraph>\n        <Popover.Close asChild>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_316\"\n            onClick={onSaveTask}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Yes, save and close',\n              description: 'Key-value tag editor modal > Unsaved tag message > Yes, save and close button',\n            })}\n          </Button>\n        </Popover.Close>\n        <Popover.Close asChild>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_324\"\n            type=\"primary\"\n            css={{ marginLeft: theme.spacing.sm }}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Cancel',\n              description: 'Key-value tag editor modal > Unsaved tag message > cancel button',\n            })}\n          </Button>\n        </Popover.Close>\n        <Popover.Arrow />\n      </Popover.Content>\n    </Popover.Root>\n  );\n}\n","export enum ErrorLogType {\n  UserInputError = 'UserInputError',\n  UnexpectedSystemStateError = 'UnexpectedSystemStateError',\n  ServerError = 'ServerError',\n  SessionError = 'SessionError',\n  NetworkError = 'NetworkError',\n  ApplicationError = 'ApplicationError',\n  UnknownError = 'UnknownError',\n}\n","export enum ErrorName {\n  BadRequestError = 'BadRequestError',\n  FormValidationError = 'FormInputError',\n  GenericNetworkRequestError = 'GenericNetworkRequestError',\n  GraphQLGenericError = 'GraphQLGenericError',\n  InternalServerError = 'InternalServerError',\n  NotFoundError = 'NotFoundError',\n  PermissionError = 'PermissionError',\n  RateLimitedError = 'RateLimitedError',\n  RouteNotFoundError = 'RouteNotFoundError',\n  ServiceUnavailableError = 'ServiceUnavailableError',\n  UnauthorizedError = 'UnauthorizedError',\n  UnknownError = 'UnknownError',\n}\n","import { FormattedMessage } from 'react-intl';\n\n// eslint-disable-next-line no-restricted-imports\nimport type { ServerError } from '@apollo/client';\n\nimport { ErrorLogType } from './ErrorLogType';\nimport { ErrorName } from './ErrorName';\n\nexport type HandleableError = Error | string | Record<string, unknown> | PredefinedError | Response;\n\nexport type CausableError = Error | string | Record<string, unknown>;\n\nexport abstract class PredefinedError extends Error {\n  abstract errorLogType: ErrorLogType;\n  abstract errorName: ErrorName;\n  abstract displayMessage: React.ReactNode;\n  isUserError = false;\n\n  constructor(message?: string, cause?: CausableError) {\n    super(message);\n  }\n}\n\nexport const matchPredefinedError = (error: HandleableError) => {\n  if (error instanceof PredefinedError) {\n    return error;\n  }\n  if (error instanceof Error && ('networkError' in error || 'graphQLErrors' in error)) {\n    return matchPredefinedApolloError(error);\n  }\n\n  if (error instanceof Response) {\n    return matchPredefinedErrorFromResponse(error);\n  }\n\n  return new UnknownError(error);\n};\n\nexport function isServerError(e: unknown): e is ServerError {\n  return e instanceof Error && e.hasOwnProperty('response');\n}\n\nconst matchPredefinedApolloError = (error: Error) => {\n  // Some errors from Apollo mock provider may have `networkError` but are not `ServerError`\n  // only act on ServerError, which do have the response attached\n  if ('networkError' in error && isServerError(error.networkError)) {\n    return matchPredefinedErrorFromResponse(error.networkError.response, error.networkError);\n  }\n\n  return new GraphQLGenericError(error);\n};\n\nconst getNetworkRequestErrorDetailsFromResponse = (response: Response): NetworkRequestErrorDetails => {\n  const status = response.status;\n\n  return { status };\n};\n\nexport const matchPredefinedErrorFromResponse = (response: Response, originalError?: CausableError) => {\n  const errorDetails = NetworkRequestError.getNetworkRequestErrorDetailsFromResponse(response);\n  switch (response.status) {\n    case 400:\n      return new BadRequestError(errorDetails, originalError);\n    case 401:\n      return new UnauthorizedError(errorDetails, originalError);\n    case 403:\n      return new PermissionError(errorDetails, originalError);\n    case 404:\n      return new NotFoundError(errorDetails, originalError);\n    case 429:\n      return new RateLimitedError(errorDetails, originalError);\n    case 500:\n      return new InternalServerError(errorDetails, originalError);\n    case 503:\n      return new ServiceUnavailableError(errorDetails, originalError);\n    default:\n      return new GenericNetworkRequestError(errorDetails, originalError);\n  }\n};\n\ninterface NetworkRequestErrorDetails {\n  status?: number;\n}\n\nexport abstract class NetworkRequestError extends PredefinedError {\n  status?: number;\n\n  constructor(message: string, details: NetworkRequestErrorDetails, cause?: CausableError) {\n    super(message, cause);\n    this.status = details.status;\n  }\n\n  static getNetworkRequestErrorDetailsFromResponse = getNetworkRequestErrorDetailsFromResponse;\n}\n\nexport class GenericNetworkRequestError extends NetworkRequestError {\n  errorLogType = ErrorLogType.ServerError;\n  errorName = ErrorName.GenericNetworkRequestError;\n  displayMessage = (\n    <FormattedMessage defaultMessage=\"A network error occurred.\" description=\"Generic message for a network error\" />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'A network error occurred.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class GraphQLGenericError extends PredefinedError {\n  errorLogType = ErrorLogType.ApplicationError;\n  errorName = ErrorName.GraphQLGenericError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"A GraphQL error occurred.\"\n      description=\"Generic message for a GraphQL error, typically due to query parsing or validation issues\"\n    />\n  );\n\n  constructor(cause?: CausableError) {\n    const message = 'A GraphQL error occurred.';\n\n    super(message, cause);\n  }\n}\n\nexport class BadRequestError extends NetworkRequestError {\n  errorLogType = ErrorLogType.UserInputError;\n  errorName = ErrorName.BadRequestError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"The request was invalid.\"\n      description=\"Bad request (HTTP STATUS 400) generic error message\"\n    />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'The request was invalid.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class InternalServerError extends NetworkRequestError {\n  errorLogType = ErrorLogType.ServerError;\n  errorName = ErrorName.InternalServerError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"Internal server error\"\n      description=\"Request failed due to internal server error (HTTP STATUS 500) generic error message\"\n    />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'Internal server error';\n\n    super(message, details, cause);\n  }\n}\n\nexport class NotFoundError extends NetworkRequestError {\n  errorLogType = ErrorLogType.UserInputError;\n  errorName = ErrorName.NotFoundError;\n\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"The requested resource was not found.\"\n      description=\"Resource not found (HTTP STATUS 404) generic error message\"\n    />\n  );\n\n  isUserError = true;\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'The requested resource was not found.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class PermissionError extends NetworkRequestError {\n  errorLogType = ErrorLogType.UnexpectedSystemStateError;\n  errorName = ErrorName.PermissionError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"You do not have permission to access this resource.\"\n      description=\"Generic message for a permission error (HTTP STATUS 403)\"\n    />\n  );\n  isUserError = true;\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'You do not have permission to access this resource.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class RateLimitedError extends NetworkRequestError {\n  errorLogType = ErrorLogType.ServerError;\n  errorName = ErrorName.RateLimitedError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"This request exceeds the maximum queries per second limit. Please wait and try again.\"\n      description=\"Too many requests (HTTP STATUS 429) generic error message\"\n    />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'This request exceeds the maximum queries per second limit. Please wait and try again.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class ServiceUnavailableError extends NetworkRequestError {\n  errorLogType = ErrorLogType.ServerError;\n  errorName = ErrorName.InternalServerError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"Service unavailable error\"\n      description=\"Request failed due to service being available (HTTP STATUS 503) generic error message\"\n    />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'Internal server error';\n\n    super(message, details, cause);\n  }\n}\n\nexport class UnauthorizedError extends NetworkRequestError {\n  errorLogType = ErrorLogType.SessionError;\n  errorName = ErrorName.UnauthorizedError;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"User is not authorized.\"\n      description=\"Unauthorized (HTTP STATUS 401) generic error message\"\n    />\n  );\n\n  constructor(details: NetworkRequestErrorDetails, cause?: CausableError) {\n    const message = 'This request exceeds the maximum queries per second limit. Please wait and try again.';\n\n    super(message, details, cause);\n  }\n}\n\nexport class UnknownError extends PredefinedError {\n  errorLogType = ErrorLogType.UnknownError;\n  errorName = ErrorName.UnknownError;\n  displayMessage = (\n    <FormattedMessage defaultMessage=\"An unknown error occurred.\" description=\"Generic message for an unknown error\" />\n  );\n\n  constructor(cause?: CausableError) {\n    const message = 'An unknown error occurred.';\n\n    super(message, cause);\n  }\n}\n\nexport class FormValidationError extends PredefinedError {\n  errorLogType = ErrorLogType.UserInputError;\n  errorName = ErrorName.FormValidationError;\n  isUserError = true;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"At least one form field has incorrect value. Please correct and try again.\"\n      description=\"Generic error message for an invalid form input\"\n    />\n  );\n\n  constructor(cause?: CausableError) {\n    const message = 'Incorrect form input.';\n\n    super(message, cause);\n  }\n}\n\n// have to be defined here to avoid circular dependencies\nexport class RouteNotFoundError extends PredefinedError {\n  errorLogType = ErrorLogType.UserInputError;\n  errorName = ErrorName.RouteNotFoundError;\n  isUserError = true;\n  displayMessage = (\n    <FormattedMessage\n      defaultMessage=\"Page not found\"\n      description=\"Error message shown to the user when they arrive at a non existent URL\"\n    />\n  );\n  constructor() {\n    super('Page not found');\n  }\n}\n","import { matchPredefinedError, UnknownError } from '@databricks/web-shared/errors';\nimport { fetchEndpoint } from '../../../common/utils/FetchUtils';\nimport { RegisteredPrompt, RegisteredPromptsListResponse, RegisteredPromptVersion } from './types';\nimport { IS_PROMPT_TAG_NAME, IS_PROMPT_TAG_VALUE, REGISTERED_PROMPT_SOURCE_RUN_IDS } from './utils';\n\nconst defaultErrorHandler = async ({\n  reject,\n  response,\n  err: originalError,\n}: {\n  reject: (cause: any) => void;\n  response: Response;\n  err: Error;\n}) => {\n  // Try to match the error to one of the predefined errors\n  const predefinedError = matchPredefinedError(response);\n  const error = predefinedError instanceof UnknownError ? originalError : predefinedError;\n  if (response) {\n    try {\n      // Try to extract exact error message from the response\n      const messageFromResponse = (await response.json())?.message;\n      if (messageFromResponse) {\n        error.message = messageFromResponse;\n      }\n    } catch {\n      // If we fail to extract the message, we will keep the original error message\n    }\n  }\n\n  reject(error);\n};\n\nexport const RegisteredPromptsApi = {\n  listRegisteredPrompts: (searchFilter?: string, pageToken?: string) => {\n    const params = new URLSearchParams();\n    let filter = `tags.\\`${IS_PROMPT_TAG_NAME}\\` = '${IS_PROMPT_TAG_VALUE}'`;\n\n    if (searchFilter) {\n      filter = `${filter} AND name ILIKE '%${searchFilter}%'`;\n    }\n\n    if (pageToken) {\n      params.append('page_token', pageToken);\n    }\n\n    params.append('filter', filter);\n\n    const relativeUrl = ['ajax-api/2.0/mlflow/registered-models/search', params.toString()].join('?');\n    return fetchEndpoint({\n      relativeUrl,\n      error: defaultErrorHandler,\n    }) as Promise<RegisteredPromptsListResponse>;\n  },\n  setRegisteredPromptTag: (promptName: string, key: string, value: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/registered-models/set-tag',\n      method: 'POST',\n      body: JSON.stringify({ key, value, name: promptName }),\n      error: defaultErrorHandler,\n    });\n  },\n  deleteRegisteredPromptTag: (promptName: string, key: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/registered-models/delete-tag',\n      method: 'DELETE',\n      body: JSON.stringify({ key, name: promptName }),\n      error: defaultErrorHandler,\n    });\n  },\n  createRegisteredPrompt: (promptName: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/registered-models/create',\n      method: 'POST',\n      body: JSON.stringify({\n        name: promptName,\n        tags: [\n          {\n            key: IS_PROMPT_TAG_NAME,\n            value: IS_PROMPT_TAG_VALUE,\n          },\n        ],\n      }),\n      error: defaultErrorHandler,\n    }) as Promise<{\n      registered_model?: RegisteredPrompt;\n    }>;\n  },\n  createRegisteredPromptVersion: (\n    promptName: string,\n    tags: { key: string; value: string }[] = [],\n    description?: string,\n  ) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/model-versions/create',\n      method: 'POST',\n      body: JSON.stringify({\n        name: promptName,\n        description,\n        // Put a placeholder source here for now to satisfy the API validation\n        // TODO: remove source after it's no longer needed\n        source: 'dummy-source',\n        tags: [\n          {\n            key: IS_PROMPT_TAG_NAME,\n            value: IS_PROMPT_TAG_VALUE,\n          },\n          ...tags,\n        ],\n      }),\n      error: defaultErrorHandler,\n    }) as Promise<{\n      model_version?: RegisteredPromptVersion;\n    }>;\n  },\n  setRegisteredPromptVersionTag: (promptName: string, promptVersion: string, key: string, value: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/model-versions/set-tag',\n      method: 'POST',\n      body: JSON.stringify({ key, value, name: promptName, version: promptVersion }),\n      error: defaultErrorHandler,\n    });\n  },\n  deleteRegisteredPromptVersionTag: (promptName: string, promptVersion: string, key: string) => {\n    fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/model-versions/delete-tag',\n      method: 'DELETE',\n      body: JSON.stringify({ key, name: promptName, version: promptVersion }),\n      error: defaultErrorHandler,\n    });\n  },\n  getPromptDetails: (promptName: string) => {\n    const params = new URLSearchParams();\n    params.append('name', promptName);\n    const relativeUrl = ['ajax-api/2.0/mlflow/registered-models/get', params.toString()].join('?');\n    return fetchEndpoint({\n      relativeUrl,\n      error: defaultErrorHandler,\n    }) as Promise<{\n      registered_model: RegisteredPrompt;\n    }>;\n  },\n  getPromptVersions: (promptName: string) => {\n    const params = new URLSearchParams();\n    params.append('filter', `name='${promptName}' AND tags.\\`${IS_PROMPT_TAG_NAME}\\` = '${IS_PROMPT_TAG_VALUE}'`);\n    const relativeUrl = ['ajax-api/2.0/mlflow/model-versions/search', params.toString()].join('?');\n    return fetchEndpoint({\n      relativeUrl,\n      error: defaultErrorHandler,\n    }) as Promise<{\n      model_versions?: RegisteredPromptVersion[];\n    }>;\n  },\n  getPromptVersionsForRun: (runUuid: string) => {\n    const params = new URLSearchParams();\n    params.append(\n      'filter',\n      `tags.\\`${IS_PROMPT_TAG_NAME}\\` = '${IS_PROMPT_TAG_VALUE}' AND tags.\\`${REGISTERED_PROMPT_SOURCE_RUN_IDS}\\` ILIKE \"%${runUuid}%\"`,\n    );\n    const relativeUrl = ['ajax-api/2.0/mlflow/model-versions/search', params.toString()].join('?');\n    return fetchEndpoint({\n      relativeUrl,\n      error: defaultErrorHandler,\n    }) as Promise<{\n      model_versions?: RegisteredPromptVersion[];\n    }>;\n  },\n  deleteRegisteredPrompt: (promptName: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/registered-models/delete',\n      method: 'DELETE',\n      body: JSON.stringify({ name: promptName }),\n      error: defaultErrorHandler,\n    });\n  },\n  deleteRegisteredPromptVersion: (promptName: string, version: string) => {\n    return fetchEndpoint({\n      relativeUrl: 'ajax-api/2.0/mlflow/model-versions/delete',\n      method: 'DELETE',\n      body: JSON.stringify({ name: promptName, version }),\n      error: defaultErrorHandler,\n    });\n  },\n};\n","import type { RegisteredPrompt, RegisteredPromptVersion } from './types';\n\nexport const REGISTERED_PROMPT_CONTENT_TAG_KEY = 'mlflow.prompt.text';\nexport const REGISTERED_PROMPT_COMMIT_MESSAGE_TAG_KEY = 'mlflow.prompt.commit_message';\n// Tag key used to store the run ID associated with a single prompt version\nexport const REGISTERED_PROMPT_SOURCE_RUN_ID = 'mlflow.prompt.run_id';\n// Tak key used to store comma-separated run IDs associated with a prompt\nexport const REGISTERED_PROMPT_SOURCE_RUN_IDS = 'mlflow.prompt.run_ids';\nexport const IS_PROMPT_TAG_NAME = 'mlflow.prompt.is_prompt';\nexport const IS_PROMPT_TAG_VALUE = 'true';\n\nexport type PromptsTableMetadata = { onEditTags: (editedEntity: RegisteredPrompt) => void };\nexport type PromptsVersionsTableMetadata = {\n  showEditAliasesModal: (versionNumber: string) => void;\n  aliasesByVersion: Record<string, string[]>;\n  registeredPrompt: RegisteredPrompt;\n};\n\nexport enum PromptVersionsTableMode {\n  TABLE = 'table',\n  PREVIEW = 'preview',\n  COMPARE = 'compare',\n}\n\nexport const getPromptContentTagValue = (promptVersion: RegisteredPromptVersion) => {\n  return promptVersion?.tags?.find((tag) => tag.key === REGISTERED_PROMPT_CONTENT_TAG_KEY)?.value;\n};\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n"],"names":["Paragraph","Typography","_ref","name","styles","_ref2","KeyValueTagFullViewModal","React","props","theme","useDesignSystemTheme","_jsx","Modal","componentId","title","tagKey","visible","isKeyValueTagFullViewModalVisible","onCancel","setIsKeyValueTagFullViewModalVisible","children","_jsxs","css","_css","backgroundColor","colors","backgroundPrimary","marginTop","spacing","sm","whiteSpace","wordBreak","tagValue","CopyButton","copyText","showLabel","icon","CopyIcon","TRUNCATE_ON_CHARS_LENGTH","getTruncatedStyles","arguments","length","undefined","overflow","textOverflow","textWrap","KeyValueTag","isClosable","onClose","tag","enableFullViewModal","charLimit","maxWidth","className","intl","useIntl","useState","shouldTruncateKey","shouldTruncateValue","key","value","fullLength","isKeyLonger","shorterLength","getKeyAndValueComplexTruncation","allowFullViewModal","fullViewModalLabel","formatMessage","id","defaultMessage","Tag","closable","LegacyTooltip","display","onClick","Text","bold","getDropdownMenu","allAvailableTags","menu","searchValue","toLowerCase","useMemo","sortedIndexOf","isValidTagKey","test","flattenOptions","data","disabled","style","color","actionTertiaryTextDefault","actionDisabledText","placement","PlusIcon","marginRight","groupOption","DropdownMenu","_ref3","TagKeySelectDropdown","control","onKeyChangeCallback","isOpen","setIsOpen","selectRef","useRef","field","fieldState","useController","rules","required","message","LegacySelect","allowClear","ref","dangerouslySetAntdProps","showSearch","dropdownRender","placeholder","defaultValue","open","onDropdownVisibleChange","filterOption","input","option","includes","onSelect","onChange","onClear","handleClear","validationState","error","map","Option","getTagsMap","tags","Map","_ref4","useEditKeyValueTagsModal","onSuccess","saveTagsHandler","valueRequired","editedEntityRef","errorMessage","setErrorMessage","initialTags","setInitialTags","finalTags","setFinalTags","showModal","setShowModal","form","useForm","defaultValues","hideModal","showEditTagsModal","useCallback","editedEntity","current","reset","saveTags","async","setIsLoading","Array","from","values","then","catch","e","_e$getUserVisibleErro","ErrorWrapper","getUserVisibleError","formValues","watch","isLoading","hasNewValues","isEqual","sortBy","isDirty","showPopoverMessage","EditTagsModal","destroyOnClose","FormattedMessage","footer","RestoreAntDDefaultClsPrefix","Button","dangerouslyUseFocusPseudoClass","UnsavedTagPopoverTrigger","onSaveTask","loading","type","onSubmit","handleSubmit","trim","newEntries","set","alignItems","gap","md","minWidth","flex","FormUI","Label","htmlFor","_tag$value","get","setValue","RHFControlledComponents","Input","htmlType","Message","rowGap","xs","flexWrap","currentFinalTags","delete","handleTagDelete","_ref6","_ref5","fullTagDisplay","truncate","shownText","Popover","Root","Trigger","asChild","Content","align","Close","marginLeft","Arrow","ErrorLogType","ErrorName","PredefinedError","Error","constructor","cause","super","errorLogType","errorName","displayMessage","isUserError","matchPredefinedApolloError","networkError","hasOwnProperty","matchPredefinedErrorFromResponse","response","GraphQLGenericError","originalError","errorDetails","NetworkRequestError","getNetworkRequestErrorDetailsFromResponse","status","BadRequestError","UnauthorizedError","PermissionError","NotFoundError","RateLimitedError","InternalServerError","ServiceUnavailableError","GenericNetworkRequestError","details","this","ServerError","ApplicationError","UserInputError","UnexpectedSystemStateError","SessionError","UnknownError","defaultErrorHandler","reject","err","predefinedError","Response","matchPredefinedError","_await$response$json","messageFromResponse","json","RegisteredPromptsApi","listRegisteredPrompts","searchFilter","pageToken","params","URLSearchParams","filter","IS_PROMPT_TAG_NAME","IS_PROMPT_TAG_VALUE","append","relativeUrl","toString","join","fetchEndpoint","setRegisteredPromptTag","promptName","method","body","JSON","stringify","deleteRegisteredPromptTag","createRegisteredPrompt","createRegisteredPromptVersion","description","source","setRegisteredPromptVersionTag","promptVersion","version","deleteRegisteredPromptVersionTag","getPromptDetails","getPromptVersions","getPromptVersionsForRun","runUuid","REGISTERED_PROMPT_SOURCE_RUN_IDS","deleteRegisteredPrompt","deleteRegisteredPromptVersion","REGISTERED_PROMPT_CONTENT_TAG_KEY","PromptVersionsTableMode","getPromptContentTagValue","_promptVersion$tags","_promptVersion$tags$f","find","buttonProps","showTooltip","setShowTooltip","handleClick","navigator","clipboard","writeText","setTimeout","onMouseLeave","handleMouseLeave"],"sourceRoot":""}